{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/Estado.js","../../src/VoltarMenu.svelte","../../src/ajuda.svelte","../../src/menu.svelte","../../src/sobre.svelte","../../src/Vitoria.svelte","../../src/creditos.svelte","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/actions.js","../../src/newjogo.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.53.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\n\n// o estado do jogo guarda a informação sobre a tela questamos no momento\nexport let estado = writable('menu');\n\nexport function trocarEstadoDoJogo(novoEstado) {\n\testado.set(novoEstado)\n}\n","<script>\n\timport { trocarEstadoDoJogo } from './Estado.js'\n</script>\n\n<head>\n\t<link rel=\"stylesheet\" href=\"/css/menu.css\">\n</head>\n\n<ul class=\"ulapp\"><button class=\"buttonapp\" on:click={() => trocarEstadoDoJogo('menu')}><p class=\"pmenu\">Voltar</p></button></ul>"," <script>\r\n    import VoltarMenu from './VoltarMenu.svelte'\r\n</script>\r\n\r\n<head>\r\n    <link rel=\"stylesheet\" href=\"/css/ajuda.css\">\r\n</head>\r\n<VoltarMenu/>\r\n\r\n<!--<h2>Como jogar?</h2> -->\r\n<div class=\"aimds\">\r\n    <ul><h2 class=\"h2\">Como jogar?</h2></ul>\r\n    <ul class=\"info\">↟ ou W para Cima</ul>\r\n    <ul class=\"info\">↡ ou S para Baixo</ul>\r\n    <ul class=\"info\">↠ ou D para a Direita</ul>\r\n    <ul class=\"info\">↞ ou A para a Esquerda</ul>\r\n</div>\r\n\r\n<div class=\"divbutton1\">\r\n    <ul><button id='button' class='botaum'>↟</button></ul>\r\n    <ul><button class='botao2'>↞</button> <button class='botao3'>↠</button></ul>\r\n    <ul><button id='button' class='buteum'>↡</button></ul>\r\n</div>\r\n<div class=\"divbutton2\">\r\n    <ul><button id='button' class='botaum'>W</button></ul>\r\n    <ul><button class='botao2'>A</button><button class='botao3'>D</button></ul>\r\n    <ul><button id='button' class='buteum'>S</button></ul>\r\n</div>\r\n\r\n<h3 class=\"h3ajuda\">Olá, querido humano.</h3>\r\n<p>Se você chegou aqui, temo que já esteja em um território perigoso.</p>\r\n<p>Humanos não deveriam arriscar tanto suas vidas, será que sua curiosidade vale tanto assim?</p>\r\n<p>Deseja um conselho?</p>\r\n<p>Não seja guiado por suas emoções,</p>\r\n<p>o tempo não é seu amigo.</p>\r\n<p>Não olhe para trás ou tente voltar.</p>\r\n<p>Fique atento e ouça bem o que lhe rodeia.</p>\r\n\r\n<h4 >Sua curiosidade pode ser sua maior perdição, \r\n    preste atenção nas entrelinhas e proteja sua retaguarda.</h4>\r\n\r\n\r\n"," <script>\n\timport { trocarEstadoDoJogo } from './Estado.js'\n</script>\n<head> \n    <link rel=\"stylesheet\" href=\"/css/menu.css\">\n</head>\n\n<h1 class='h1menu'>Minos</h1>\n<p class='pmenu'>Labyrinth</p>   \n\n\n<div class=\"divapp\">\n    <ul class=\"ulapp\"><button  class=\"buttonapp\" on:click={() => trocarEstadoDoJogo('jogar')}><p class=\"pmenu\">Jogar</p></button></ul>\n    <ul class=\"ulapp\"><button  class=\"buttonapp\" on:click={() => trocarEstadoDoJogo('ajuda')}><p class=\"pmenu\">Como jogar</p></button></ul>\n    <ul class=\"ulapp\"><button  class=\"buttonapp\" on:click={() => trocarEstadoDoJogo('sobre')}><p class=\"pmenu\">Sobre</p></button></ul>\n    <ul class=\"ulapp\"><button class=\"buttonapp\" on:click={() => trocarEstadoDoJogo('creditos')}><p class=\"pmenu\">Créditos</p></button></ul>\n</div>\n"," <script>\r\n   import VoltarMenu from './VoltarMenu.svelte'\r\n</script>\r\n<VoltarMenu/>\r\n<head>\r\n    <link rel=\"stylesheet\" href=\"/css/sobre.css\">\r\n</head>\r\n<h1 class='sobreh1'>Sobre o MINOS:</h1>\r\n\r\n<p class=\"fic\">\r\n A história do MINOS LABYRINTH se dá ínicio quando Dante, nosso protagonista e aspirante a historiador, se vê de frente a grande oportunidade de sua vida\r\n que é poder provar tanto a si mesmo quanto para as pessoas ao seu redor que criaturas mitólogicas existem; Durante uma de suas viagens em busca\r\n de mais informações Dante se depara com um velho maltrapilho que aos gritos dizia que os monstros existentes dentro de um labirinto fugiriam e destruiriam\r\n toda aquela cidade. Como se era esperado, ninguém deu ouvidos aos avisos daquele senhor lunático, apenas continuavam seguindo suas vidas e o ignorando, \r\n algo dizia a Dante que aquela cena já havia se repetido inúmeras vezes. Já decidido a também ignorar aquele senhor o rapaz encontra caído no chão o que parecia\r\n ser um diário, o pequeno caderno estava sujo e mal conservado, mesmo com curiosidade o garoto decidiu devolver o objeto a aquele homem - \"Pode ficar com essa\r\n porcaria, jogue fora! Faça o que quiser!\" - foi o que Dante ouviu antes de ainda aos gritos o velho louco ir embora.\r\n Minos Labyrinth foi o nome que mais se repetiu a medida que ele o lia, descobrindo que o diário estava repleto de relatos de outros que também haviam se aventurado\r\n a entrar no labirinto, ficando surpreso ao perceber que o velho provavelmente fora o único que voltou com vida.\r\n Tomado pelo desejo de ver as criaturas com seus próprios olhos Dante decidiu que entraria naquele labirinto, seria a maior aventura de sua vida e o jovem não via a\r\nhora de finalmente desvender o mistério que o \"Minos Labyrinth\" tinha a lhe ofercer.\r\n</p>\r\n\r\n\r\n<h1 class=\"sobreh1\"> Experiência do Grupo </h1>\r\n\r\n<p> Pela convivência do semestre letivo tinhamos um bom entrosamento que contribuiu para um bom desempenho em equipe,\r\n    sempre tentando ouvir uns aos outros e ajudar nas dificuldades individuais de cada um. \r\n    Apesar de diversas complicações durante o processo de criação, conseguimos lidar com os problemas e entregar nosso projeto do jeito que desejávamos. \r\n</p>\r\n\r\n\r\n<h1 class='sobreh1'>Os Deuses:</h1>\r\n\r\n<h2>Alice Manguinho</h2>\r\n\r\n<p>Foi muito interessante participar da criação do minos. Por nunca ter tido contato com programação, tive dificuldades com CSS e com a lógica da página do jogo, mas com o apoio e auxílio da equipe conseguimos finalizar o projeto do jeito que tanto idealizamos durante os meses. A persistêcia nos levou a realizaçâo de nossos objetivos.\r\n\r\n <h2>Assíria Renara</h2>\r\n\r\n <p> Foi muito divertido o processo de criação dos personagens, frases, história e tudo mais; porém a programação foi o que mais me deu dor de cabeça por ter sido o meu primeiro contato com essa área. Ainda assim, gostei. A experiência se tornou melhor porque tive a ajuda do meu grupo, creio eu que o resultado ficou ótimo e conseguimos fazer um excelente jogo. </p>\r\n    \r\n <h2>Claudiane Rodrigues</h2>\r\n <p>Adorei a experiência de estar programando um jogo (apesar de todo o estresse com coisas dando errado e de trabalhar com front) e sinceramente nunca imaginei que gostaria disso...eu diria que eu descobri uma parte de mim que eu não conhecia ainda, aprendi coisas que não sabia, coloquei em prática coisas que sabia mas ainda não havia colocado em prática,testei minhas habilidades. Enfim... Espero que gostem do nosso jogo :) </p>\r\n\r\n <h2>Emmily Kathylen</h2>\r\n<p>Participar desse projeto foi de longe a melhor experiência que já tive, apesar de ser nova no ramo da programação gostei muito de aprender o funcionamento por trás do jogo. Tive dificuldades no inicio porém com a ajuda e apoio da equipe conseguimos aprender muita coisa e praticar. Por fim, gostei muito de ter participado e colocado em pratica o que aprendi espero que vocês gostem do nosso jogo e se divirtam assim como nos divertimos.</p>\r\n\r\n <h2>Guilherme Valença</h2>\r\n<p>Gostei bastante da experiência de ter participado da criação desse jogo. Tive diversos aprendizados, vi alguns dos meus pontos fortes e fracos, houveram grandes complicações no caminho,mas também houveram grandes descobertas. Ver o jogo ainda sem forma ganhando vida ao longo dos dias foi simplesmente sensacional, e mesmo com tantas dores de cabeça, foi uma ótima experiência para minha pessoa na área da programação mesmo com todos os altos e baixos. Espero que possam se divertir com nosso tão sonhado Minos, pode não estar perfeito, mas com certeza foi uma das coisas mais desafiadoras que já tive que fazer.  Agradeço a todo meu grupo por estarem empenhados a fazer acontecer e espero que gostem, e aproveitem ao máximo todas as mecânicas e desafios que nosso jogo tem a oferecer.</p>\r\n\r\n <h1 class='sobreh1'>Mestre:</h1>\r\n\r\n   <h2>Allan Lima</h2>\r\n    <p>Professor Responsável <br> allan.lima@igarassu.ifpe.edu.br </p>\r\n","<style>\n    h1{\n        color:  rgb(184, 184, 51);\n        text-align: center;\n        font-family: 'Felix Titling';\n        font-size: 300%;\n        background: linear-gradient(to bottom, #996600 0%, #ffff00 80%);\n        background-clip: text;\n        -webkit-background-clip: text;\n        color: transparent;\n    }\n    h3{\n        color:  rgb(184, 184, 51);\n        text-align: center;\n        font-family: 'Felix Titling';\n        font-size: 200%;\n        background: linear-gradient(to bottom, #996600 0%, #ffff00 80%);\n        background-clip: text;\n        -webkit-background-clip: text;\n        color: transparent;\n    }\n</style>\n\n<h1>Olá, caro humano.</h1>\n\n<h3>Então nos encontramos novamente,</h3>\n<h3>Parece que realmente conseguiu se livrar de seus instintos e enfrentar os mistérios que rodeiam o Minos Labyrinth.</h3>\n<h3>Devo parabenizá-lo por ainda estar com vida, mas me questiono se por muito tempo. </h3>\n<h3>Humanos sempre cedendo a seus desejos e vontades sem se importar com as consequências de seus atos,</h3>\n<h3>acha mesmo que ficará impune por invadir o lar dos seres que encontrou ao longo do caminho?</h3>\n<h3>Talvez tenha dado muita sorte hoje, jovem Dante.</h3>\n<h3>Seria realmente cômico se acreditasse que ela vai durar para sempre.</h3> ","<script>\n    import VoltarMenu from \"./VoltarMenu.svelte\";\n</script>\n<head>\n    <link rel=\"stylesheet\" href=\"/css/creditos.css\">\n    <link rel=\"stylesheet\" href=\"/css/menu.css\">\n</head>\n\n<h4 class=\"geral\"> Design </h4>\n\n<p class=\"geral\"> Alice Manguinho </p>\n<p class=\"geral\"> Assíria Renara </p>\n<p class=\"geral\"> Claudiane Rodrigues </p>\n<p class=\"geral\"> Emmily Kathylen </p>\n<p class=\"geral\"> Guilherme Valença </p>\n\n<h4 class=\"geral\"> Lógica </h4>\n\n<p class=\"geral\"> Alice Manguinho </p>\n<p class=\"geral\"> Assíria Renara </p>\n<p class=\"geral\"> Claudiane Rodrigues </p>\n<p class=\"geral\"> Emmily Kathylen </p>\n<p class=\"geral\"> Guilherme Valença </p>\n\n<h4 class=\"geral\"> História </h4>\n\n<p class=\"geral\"> Alice Manguinho </p>\n<p class=\"geral\"> Assíria Renara </p> \n\n<h4 class=\"geral\"> Áudio </h4>\n\n<p class=\"geral\"> Mauro Sergio </p>\n<p class=\"geral\">@mevyness</p>\n\n\n<h1 class=\"geral\"> Criadores </h1>\n\n<h4 class=\"geral\"> Alice Manguinho </h4>\n\n<p class=\"geral\"> 17 anos <br> 1° período de IPI <br> asms1@discente.ifpe.edu.br <br><a href=\"https://github.com/AliceManguinho\">github</a></p>\n\n<h4 class=\"geral\"> Assíria Renara </h4>\n\n<p class=\"geral\"> 22 anos <br> 1° período de IPI <br> aross@discente.ifpe.edu.br <br><a href=\"https://github.com/assiriaS2\">github</a>   </p>\n\n<h4 class=\"geral\"> Claudiane Rodrigues </h4>\n\n<p class=\"geral\"> 21 anos <br> 1° período de IPI <br> cra@discente.ifpe.edu.br <br> <a href=\"https://github.com/Cl4udiAnn3\">github</a>  </p>\n\n<h4 class=\"geral\"> Emmily Kathylen </h4>\n\n<p class=\"geral\"> 20 anos <br> 1° período de IPI <br> emmilysouzakathylen@gmail.com <br><a href=\"https://github.com/EmmilyKathylen\">github</a>   </p>\n\n<h4 class=\"geral\"> Guilherme Valença </h4>\n\n<p class=\"geral\"> 21 anos <br> 1° período de IPI <br> gvrp@discente.ifpe.edu.br <br><a href=\"https://github.com/Guilhermevalenca\">github</a>  </p>\n\n<p class=\"agradeca\"> Obrigado por Jogar!</p>\n\n<p class=\"geral\" id=\"voltar\"> <VoltarMenu/> </p>\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n\nexport const createInlineStyle = (disableInlineStyles, style) =>\n\tdisableInlineStyles ? {} : { style };\nexport const createMarkerProps = disableInlineStyles => ({\n\t\"aria-hidden\": \"true\",\n\t...createInlineStyle(disableInlineStyles, \"display:none;\"),\n});\n","export const paramRegex = /^:(.+)/;\n\nexport const substr = (str, start, end) => str.substr(start, end);\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tsubstr(string, 0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler =\n\thandler =>\n\t(...args) =>\n\t\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n\tsubstr,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n * @returns {{ pathname: string; search: string; hash: string }} The location\n *\n * @example\n * ```js\n * const path = \"/search?q=falafel#result-3\";\n * const location = parsePath(path);\n * // -> {\n * //   pathname: \"/search\",\n * //   search: \"?q=falafel\",\n * //   hash: \"#result-3\",\n * // };\n * ```\n */\nexport const parsePath = path => {\n\tconst searchIndex = path.indexOf(\"?\");\n\tconst hashIndex = path.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex\n\t\t? normalizeUrlFragment(substr(path, hashIndex))\n\t\t: \"\";\n\tconst pathnameAndSearch = hasHashIndex ? substr(path, 0, hashIndex) : path;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(substr(pathnameAndSearch, searchIndex))\n\t\t: \"\";\n\tconst pathname =\n\t\t(hasSearchIndex\n\t\t\t? substr(pathnameAndSearch, 0, searchIndex)\n\t\t\t: pathnameAndSearch) || \"/\";\n\treturn { pathname, search, hash };\n};\n\n/**\n * Joins a location object to one path string.\n *\n * @param {{ pathname: string; search: string; hash: string }} location The location object\n * @returns {string} A path, created from the location\n *\n * @example\n * ```js\n * const location = {\n *   pathname: \"/search\",\n *   search: \"?q=falafel\",\n *   hash: \"#result-3\",\n * };\n * const path = stringifyPath(location);\n * // -> \"/search?q=falafel#result-3\"\n * ```\n */\nexport const stringifyPath = location => {\n\tconst { pathname, search, hash } = location;\n\treturn pathname + search + hash;\n};\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { parsePath } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...parsePath(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nimport { navigate as defaultNavigate } from \"./history\";\nimport { shouldNavigate, findClosest, addListener, isFunction } from \"./utils\";\n\nconst createAction =\n\tgetAnchor =>\n\t(node, navigate = defaultNavigate) => {\n\t\tconst handleClick = event => {\n\t\t\tconst anchor = getAnchor(event);\n\t\t\tif (anchor && anchor.target === \"\" && shouldNavigate(event)) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst to = anchor.pathname + anchor.search + anchor.hash;\n\t\t\t\tnavigate(to, { replace: anchor.hasAttribute(\"replace\") });\n\t\t\t}\n\t\t};\n\t\tconst unlisten = addListener(node, \"click\", handleClick);\n\t\treturn { destroy: unlisten };\n\t};\n\n// prettier-ignore\n/**\n * A link action that can be added to <a href=\"\"> tags rather\n * than using the <Link> component.\n *\n * Example:\n * ```html\n * <a href=\"/post/{postId}\" use:link>{post.title}</a>\n * ```\n */\nexport const link = /*#__PURE__*/createAction(event => event.currentTarget); // eslint-disable-line spaced-comment, max-len\n\n// prettier-ignore\n/**\n * An action to be added at a root element of your application to\n * capture all relative links and push them onto the history stack.\n *\n * Example:\n * ```html\n * <div use:links>\n *   <Router>\n *     <Route path=\"/\" component={Home} />\n *     <Route path=\"/p/:projectId/:docId\" component={ProjectScreen} />\n *     {#each projects as project}\n *       <a href=\"/p/{project.id}\">{project.title}</a>\n *     {/each}\n *   </Router>\n * </div>\n * ```\n */\nexport const links = /*#__PURE__*/createAction(event => { // eslint-disable-line spaced-comment\n  const anchor = findClosest(\"A\", event.target);\n  if (\n    anchor &&\n    isFunction(anchor.hasAttribute) &&\n    !anchor.hasAttribute(\"noroute\")\n  ) {\n    return anchor;\n  }\n  return null;\n});\n","<script>\n    //imports:\n    import Vitoria from \"./Vitoria.svelte\";\n    import VoltarMenu from \"./VoltarMenu.svelte\";\n    import Creditos from \"./creditos.svelte\";\n    import { trocarEstadoDoJogo } from \"./Estado\";\n    import { link } from \"svelte-navigator\";\n    //Referente ao uso do teclado no jogo:\n    let key;\n    let code;\n    function handleKeydown(event){\n        key = event.key;\n        code = event.code;\n    }\n    //Mapas do jogo:\n    let mapa0 = [\n        [2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [2,2,\"DANTE\",0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,2,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,2,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1],\n        [2,2,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1],\n        [2,2,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1],\n        [2,2,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1],\n        [2,2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1],\n        [2,2,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,1],\n        [2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1],\n        [2,2,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1],\n        [2,2,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1],\n        [2,2,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1],\n        [2,2,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\"X\"],\n        [2,2,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1],\n        [2,2,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n        [2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1],\n        [2,2,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1],\n        [2,2,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1],\n        [2,2,1,0,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,1,0,1,0,1],\n        [2,2,1,0,1,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1],\n        [2,2,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1],\n        [2,2,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1],\n        [2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],  \n        [2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n    ]\n    let mapa1 = [\n\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],\n        [2,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2],\n        [2,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,2],\n        [2,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,2],\n        [2,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,2],\n        [2,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2],\n        [2,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,2],\n        [2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,2],\n        [2,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,\"DANTE\",1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,1,2],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,1,1,1,0,1,2],\n        [2,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,0,1,2],\n        [2,8,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,1,2],\n        [2,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,0,1,2],\n        [2,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,1,0,1,2],\n        [2,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,0,1,2],\n        [2,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,0,8,2],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,0,1,0,1,1,0,1,2],\n        [2,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,1,2],\n        [2,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,0,1,1,1,0,1,0,0,1,0,0,0,0,1,2],\n        [2,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,1,0,1,0,1,1,1,0,1,1,0,0,1,1,1,1,0,1,0,0,1,1,0,1,0,1,2],\n        [2,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,1,0,1,2],\n        [2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,1,2],\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,2],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2],  \n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\"Y\",1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]\n    ]\n    let mapa2 = [\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2],\n        [2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2],\n        [2,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,7,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,2],\n        [2,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,2],\n        [2,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,1,1,7,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,2],\n        [2,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,7,0,1,0,1,2],\n        [2,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,2],\n        [2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,7,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,2],\n        [2,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,2],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,7,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,2],\n        [2,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,7,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,2],\n        [2,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,2],\n        [2,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,7,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,2],\n        [2,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,2],\n        [2,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,7,7,0,0,1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,2],\n        [2,1,0,1,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,2],\n        [2,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,2],\n        [2,1,0,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,0,1,1,1,1,0,1,1,1,2],\n        [2,1,0,0,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,7,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,2],\n        [2,1,0,1,1,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,7,7,1,1,1,7,1,1,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,2],\n        [2,1,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,1,1,1,1,0,1,2],\n        [2,1,0,1,1,1,0,1,0,1,1,0,0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,1,0,1,2],\n        [2,1,0,0,1,1,0,1,0,1,1,1,1,1,1,0,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,2],\n        [2,1,7,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,1,2],\n        [2,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,1,0,1,1,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,0,1,2],\n        [2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,2],\n        [2,1,0,1,0,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,0,1,0,1,2],\n        [2,1,0,1,0,1,0,0,0,7,0,0,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,1,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,1,1,1,0,1,0,1,2],\n        [2,1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,2],\n        [2,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1,1,2],\n        [2,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,1,1,0,0,0,8,2],\n        [2,1,\"DANTE\",0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,2],\n        [2,1,1,1,1,0,1,0,1,1,0,0,7,1,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1,1,1,2],\n        [2,1,0,0,0,0,1,0,1,0,0,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,0,1,1,1,1,2],\n        [2,1,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,8,2],\n        [2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,2],\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,1,1,1,1,1,1,1,1,1,1,1,1,8,7,8,1,1,1,1,1,1,\"Z\",1,1,8,1,1,1,1,1,8,1,1,1,1,1,1,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]\n]\nlet mapa3 = [\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [2,\"DANTE\",0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1,0,1],\n        [2,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,1],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1],\n        [2,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0,7,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1],\n        [2,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1],\n        [2,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,1,0,1,0,1],\n        [2,8,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,0,1,1,1,0,1,0,1,0,1],\n        [2,1,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,7,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1],\n        [2,1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1],\n        [2,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,7,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n        [2,1,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,1,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,7,\"V\",0,0,0,1,0,1,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,1,1,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,0,0,1,0,0,1,1,1,0,1,1,1,0,1,0,1,1,1,7,1,1,1,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,1,1,1,0,1,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,1,1,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n        [2,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,7,1,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1],\n        [2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1],\n        [2,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,7,7,0,0,7,7,0,0,7,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,7,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,0,1,0,1,0,1],  \n        [2,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,1],\n        [2,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,0,1,0,1,0,1],\n        [2,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,0,1,0,1,0,1,0,1],\n        [2,1,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1],\n        [2,1,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1],\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,0,0,1,1,0,1,0,1,0,1,0,1,0,8],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,1,0,1,0,1,0,1,0,1,0,1],\n        [2,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,8,0,1,1,1,1,0,1,0,1,0,1,0,1,0,1],\n        [2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1],\n        [2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1],\n        [2,1,0,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1],\n        [2,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1],\n        [2,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,1,0,1,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1],\n        [2,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,1,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,0,1,0,1],\n        [2,1,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],\n        [2,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,1,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,0,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,0,0,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,0,1,1,0,1,1,1,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,1,1,0,0,1,0,0,1,1,7,7,7,7,7,7,7,7,7,7,1,1,1,1,1,7,7,7,7,7,7,7,7,7,7,1,1,1,1,1,7,7,7,7,7,7,7,7,7,7,1,0,1],\n        [2,1,0,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,1,0,1,1,0,1,0,0,1,0,0,0,1,1,7,1,1,1,1,1,1,1,1,7,1,1,1,1,1,7,1,1,1,1,1,1,1,1,7,1,1,1,1,1,7,1,1,1,1,1,1,1,1,7,1,0,8],\n        [2,1,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,1,0,0,1,1,1,1,1,0,0,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,7,1,7,7,7,7,7,7,7,7,1,1,1,1,1,7,1,7,7,7,7,7,7,1,7,1,1,1,1,1,7,1,7,7,7,7,7,7,7,7,1,0,1],\n        [2,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,1,0,1,0,1,0,0,1,1,1,0,0,0,1,0,1,0,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,1,7,1,7,1,1,1,1,1,1,1,1,1,1,1,1,7,1,7,1,1,1,1,7,1,7,1,1,1,1,1,7,1,7,1,1,1,1,1,1,1,1,0,1],\n        [2,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,7,1,7,7,7,7,7,7,7,7,1,1,1,1,1,7,1,7,1,1,1,1,7,1,7,1,1,1,1,1,7,1,7,7,7,7,7,7,7,7,1,0,1],\n        [2,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,1,0,1,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,1,0,1,0,1,0,0,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,1,1,1,0,0,0,1,7,1,1,1,1,1,1,1,1,7,1,1,1,1,1,7,1,7,1,1,1,1,7,1,7,1,1,1,1,1,7,1,1,1,1,1,1,1,1,7,1,0,1],  \n        [2,1,1,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,0,0,1,1,0,1,1,1,0,1,1,0,0,1,0,0,0,1,1,1,1,1,0,1,7,7,7,7,7,7,7,7,1,7,1,1,1,1,1,7,1,7,1,1,1,1,7,1,7,1,1,1,1,1,7,7,7,7,7,7,7,7,1,7,1,0,1],\n        [2,1,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,7,1,7,1,1,1,1,1,7,1,7,1,1,1,1,7,1,7,1,1,1,1,1,1,1,1,1,1,1,1,7,1,7,1,0,1],\n        [2,1,1,1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,1,1,1,0,1,7,7,7,7,7,7,7,7,1,7,1,7,7,7,1,7,1,7,7,7,7,7,7,1,7,1,7,7,7,1,7,7,7,7,7,7,7,7,1,7,1,0,1],\n        [2,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,0,1,1,0,1,1,0,0,1,1,0,1,7,1,1,1,1,1,1,1,1,7,1,7,1,7,1,7,1,1,1,1,1,1,1,1,7,1,7,1,7,1,7,1,1,1,1,1,1,1,1,7,1,0,1],\n        [2,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,1,0,0,1,0,1,7,7,7,7,7,7,7,7,7,7,1,7,7,7,1,7,7,7,7,7,7,7,7,7,7,1,7,7,7,1,7,7,7,7,7,7,7,7,7,7,1,0,1],\n        [2,1,1,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,1,0,0,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1],\n        [2,1,0,0,1,1,0,1,1,0,1,1,0,0,0,0,1,1,1,0,0,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1,0,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,1,0,1,1,1,0,0,0,0,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1],\n        [2,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,1,0,0,1,0,0,1,1,0,0,1,1,1,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1],\n        [2,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1],\n        [2,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1],  \n        [2,1,1,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,0,1],\n        [2,1,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],\n        [2,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n]\n\n\n    let mapa4 = [\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\n        [2,\"DANTE\",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\"C\"],\n        [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n    ]\n    let Mapa1Save = [];\n    let Mapa2Save = [];\n    let Mapa3Save = [];\n    //limite de renderização:\n    let Dimensionamento = 3;\n    let LimiteX = 0;\n    let LimiteY = 0;\n    function RenderizandoMapa(){\n        if(MudandoDeFase == \"tutorial\"){\n            for(let i in mapa0){\n                for(let j in mapa0[i]){\n                    if(mapa0[i][j] == \"DANTE\"){\n                        LimiteX = j - Dimensionamento;\n                        LimiteY = i - Dimensionamento;\n                        return\n                    }\n                }\n            }\n        }else if(MudandoDeFase == \"nivel1\"){\n            for(let i in mapa1){\n                for(let j in mapa1[i]){\n                    if(mapa1[i][j] == \"DANTE\"){\n                        LimiteX = j - Dimensionamento;\n                        LimiteY = i - Dimensionamento;\n                        return\n                    }\n                }\n            }\n        }else if(MudandoDeFase == \"nivel2\"){\n            for(let i in mapa2){\n                for(let j in mapa2[i]){\n                    if(mapa2[i][j] == \"DANTE\"){\n                        LimiteX = j - Dimensionamento;\n                        LimiteY = i - Dimensionamento;\n                        return\n                    }\n                }\n            }\n        }else if(MudandoDeFase == \"nivel3\"){\n            for(let i in mapa3){\n                for(let j in mapa3[i]){\n                    if(mapa3[i][j] == \"DANTE\"){\n                        LimiteX = j - Dimensionamento;\n                        LimiteY = i - Dimensionamento;\n                        return\n                    }\n                }\n            }\n        }else if(MudandoDeFase == \"vitoria\"){\n            for(let i in mapa4){\n                for(let j in mapa4[i]){\n                    if(mapa4[i][j] == \"DANTE\"){\n                        LimiteX = j - Dimensionamento;\n                        LimiteY = i - Dimensionamento;\n                        return\n                    }\n                }\n            }\n        }\n    }\n    //Logica de movimentação do jogo:\n\n    let EixoX = 0;\n    let EixoY = 0;\n    let SaveX = 0;\n    let SaveY = 0;\n    let PontoDeSave1 = [0,0];\n    let PontoDeSave2 = [0,0];\n    let PontoDeSave3 = [0,0];\n    function DeterminandoEixos(fase){ //Ponto zero onde o jogador começa a jogar\n        if(fase == \"tutorial\"){\n            for(let i in mapa0){\n                for(let j in mapa0[i]){\n                    if(mapa0[i][j] == \"DANTE\"){\n                        EixoX = j;\n                        EixoY = i;\n                        return\n                    }\n                }\n            }\n        }else if(fase == \"nivel1\"){\n            for(let i in mapa1){\n                for(let j in mapa1[i]){\n                    if(mapa1[i][j] == \"DANTE\"){\n                        EixoX = j;\n                        EixoY = i;\n                        PontoDeSave1[0] = EixoX;\n                        PontoDeSave1[1] = EixoY;\n                        return\n                    }\n                }\n            }\n        }else if(fase == \"nivel2\"){\n            for(let i in mapa2){\n                for(let j in mapa2[i]){\n                    if(mapa2[i][j] == \"DANTE\"){\n                        EixoX = j;\n                        EixoY = i;\n                        PontoDeSave2[0] = EixoX;\n                        PontoDeSave2[1] = EixoY;\n                        return\n                    }\n                }\n            }\n        }else if(fase == \"nivel3\"){\n            for(let i in mapa3){\n                for(let j in mapa3[i]){\n                    if(mapa3[i][j] == \"DANTE\"){\n                        EixoX = j;\n                        EixoY = i;\n                        PontoDeSave3[0] = EixoX;\n                        PontoDeSave3[1] = EixoY;\n                        return\n                    }\n                }\n            }\n        }else if(fase == \"vitoria\"){\n            for(let i in mapa4){\n                for(let j in mapa4[i]){\n                    if(mapa4[i][j] == \"DANTE\"){\n                        EixoX = j;\n                        EixoY = i;\n                        return\n                    }\n                }\n            }\n        }\n    }\n    function RetornaAoSave(){ //Voltar para o nivel 1, para onde deveria voltar\n        mapa1[EixoY][EixoX] = 0;\n        EixoX = PontoDeSave1[0];\n        EixoY = PontoDeSave1[1];\n        mapa1[EixoY][EixoX] = \"DANTE\";\n        Tudodnv()\n        return\n    }\n    function ResertarPosicao(){//Caso tente passar por onde não deveria.\n        EixoX = SaveX;\n        EixoY = SaveY;\n        RenderizandoMapa()\n    }\n\n    //Toda movimentação segue a mesma lógica, mudando apenas qual Eixo vai ser alterado de valor.\n\n    function MovimentaçãoPeloMapa(move){\n        SaveX = EixoX;\n        SaveY = EixoY;\n        if(move == \"DIREITA\"){\n            EixoX++\n            code = \"d\"\n        }else if (move == \"ESQUERDA\"){\n            EixoX--\n            code = \"a\"\n        }else if(move == \"CIMA\"){\n            EixoY--\n            code = \"w\"\n        }else if(move == \"BAIXO\"){\n            EixoY++\n            code = \"s\"\n        }\n        if(MudandoDeFase == \"tutorial\"){\n            MudarDeFase(mapa0[EixoY][EixoX]) \n            if(mapa0[EixoY][EixoX] != 0){\n                ResertarPosicao()\n                return\n            }\n            mapa0[SaveY][SaveX] = 0;\n            mapa0[EixoY][EixoX] = \"DANTE\";\n        }else if(MudandoDeFase == \"nivel1\"){\n\n            MudarDeFase(mapa1[EixoY][EixoX])\n            Mapa1Save.push([SaveX,SaveY])\n\n            if(mapa1[EixoY][EixoX] != 0){\n                if(mapa1[EixoY][EixoX] == \"MINOS\"){\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"tutorial\"\n                }else if(mapa1[EixoY][EixoX] == 8){ //para Saidas falsas\n                    alert('Não foi dessa vez!')\n                }\n                ResertarPosicao()\n                return\n            }\n            mapa1[EixoY][EixoX] = \"DANTE\"\n            mapa1[SaveY][SaveX] = 0;\n        }else if(MudandoDeFase == \"nivel2\"){\n\n            MudarDeFase(mapa2[EixoY][EixoX])\n            Mapa2Save.push([SaveX,SaveY])\n            \n            if(mapa2[EixoY][EixoX] == 7){ //paredes falsas\n                if(mapa2[SaveY][SaveX] == 7){ //não transforma paredes falsas em estrada\n                    return\n                }\n                mapa2[SaveY][SaveX] = 0; \n                return\n            }else if(mapa2[EixoY][EixoX] != 0){\n                if(mapa2[EixoY][EixoX] == \"MINOS\"){\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"nivel1\"\n                }else if(mapa2[EixoY][EixoX] == 8){ //saida falsa\n                    alert('Nem tudo é o que parece jovem Dante!')\n                }\n                ResertarPosicao()\n                return\n            }\n            mapa2[EixoY][EixoX] = \"DANTE\"\n            if(mapa2[SaveY][SaveX] != 7){ \n                mapa2[SaveY][SaveX] = 0;\n            }\n        }else if(MudandoDeFase == \"nivel3\"){\n\n            MudarDeFase(mapa3[EixoY][EixoX])\n            Mapa3Save.push([SaveX,SaveY])\n            \n            if(mapa3[EixoY][EixoX] == 7){\n                if(mapa3[SaveY][SaveX] == 7){\n                    return\n                }\n                mapa3[SaveY][SaveX] = 0; \n                return\n            }else if(mapa3[EixoY][EixoX] != 0){\n                if(mapa3[EixoY][EixoX] == \"MINOS\"){\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"nivel1\"\n                }else if(mapa3[EixoY][EixoX] == 8){\n                    alert('Não consegue, não é?')\n                }\n                ResertarPosicao()\n                return\n            }\n            mapa3[EixoY][EixoX] = \"DANTE\"\n            if(mapa3[SaveY][SaveX] != 7){\n                mapa3[SaveY][SaveX] = 0;\n            }\n        }else if(MudandoDeFase == \"vitoria\"){\n            MudarDeFase(mapa4[EixoY][EixoX])\n            if(mapa4[EixoY][EixoX] != 0){\n                ResertarPosicao()\n                return\n            }\n            mapa4[EixoY][EixoX] = \"DANTE\";\n            mapa4[SaveY][SaveX] = 0;\n        } RenderizandoMapa()\n    }\n    //Referente a mudança de fases:\n    let MudandoDeFase = \"tutorial\"; // fase inicial do jogo\n    function MudarDeFase(FaseAtual){\n        if(FaseAtual == \"X\"){\n            \n            enigma = true;\n            Tudodnv()\n        \n        }else if(FaseAtual == \"Y\"){\n            \n            enigma = true;\n            Tudodnv()\n        \n        }else if(FaseAtual == \"Z\"){\n            \n            enigma = true;\n            Tudodnv()\n        \n        }else if(FaseAtual == \"V\"){\n            \n            enigma = true;\n            Tudodnv()\n        \n        }else if(FaseAtual == \"C\"){\n            \n            enigma = true;\n            Tudodnv()\n\n        }\n    }\n    //Referente aos enigmas:\n    let enigma = false;\n    let PalavraChave = '';\n    function Alterando(teste, fase){ // mudança de fase ao acertar o enigma.\n        if(teste){\n            enigma = teste;\n            PalavraChave = '';\n            if(fase == \"tutorial\"){\n\n                MudandoDeFase = \"nivel1\";\n            \n            }else if(fase == \"nivel1\"){\n                \n                MudandoDeFase = \"nivel2\"; \n            \n            }else if(fase == \"nivel2\"){\n                \n                MudandoDeFase = \"nivel3\";\n            \n            }else if(fase == \"nivel3\"){\n                \n                MudandoDeFase = \"vitoria\";\n            \n            }\n            enigma = false;\n        }\n    }\n    let Tempo;\n    let temporizador = 300;\n    let contador = temporizador; // Contador geral para resolver todos os enigmas \n    function TempoEnigma(){\n        Tempo = setInterval( () => {\n            contador--\n            if(contador == 0){\n                alert('Tempo Esgotado')\n                MudandoDeFase = \"nivel1\"\n                enigma = false;\n                RetornaAoSave()\n                return\n        }\n        },1000)\n    }\n    function ResertarContador(){\n        contador = temporizador;\n    }\n    let Movimentar;\n    let Ritmo = 4000;\n    let Indice = 0;\n    let PosicaoMonstroX = 0;\n    let PosicaoMonstroY = 0;\n    let SaveIndice = 60;\n    function Perseguição(){\n        clearInterval(Caçar)\n        Movimentar = setInterval(() => {\n            if(MudandoDeFase == \"nivel1\"){\n                PosicaoMonstroX = Mapa1Save[Indice][0];\n                PosicaoMonstroY = Mapa1Save[Indice][1];\n                if(mapa1[PosicaoMonstroY][PosicaoMonstroX] != \"DANTE\"){\n                    mapa1[PosicaoMonstroY][PosicaoMonstroX] = \"MINOS\";\n                }else{\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"tutorial\"\n                    return\n                }\n                if(Indice > 0){\n                    mapa1[Mapa1Save[Indice - 1][1]][Mapa1Save[Indice - 1][0]] = 0;\n                }\n            }else if(MudandoDeFase == \"nivel2\"){\n                PosicaoMonstroX = Mapa2Save[Indice][0];\n                PosicaoMonstroY = Mapa2Save[Indice][1];\n                if(mapa2[PosicaoMonstroY][PosicaoMonstroX] != \"DANTE\"){\n                    mapa2[PosicaoMonstroY][PosicaoMonstroX] = \"MINOS\";\n                }else{\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"nivel1\"\n                    return\n                }\n                if(Indice > 0){\n                    mapa2[Mapa2Save[Indice - 1][1]][Mapa2Save[Indice - 1][0]] = 0;\n                }\n            }else if(MudandoDeFase == \"nivel3\"){\n                PosicaoMonstroX = Mapa3Save[Indice][0];\n                PosicaoMonstroY = Mapa3Save[Indice][1];\n                if(mapa3[PosicaoMonstroY][PosicaoMonstroX] != \"DANTE\"){\n                    mapa3[PosicaoMonstroY][PosicaoMonstroX] = \"MINOS\";\n                }else{\n                    alert('O monstro o alcançou')\n                    RetornaAoSave()\n                    MudandoDeFase = \"nivel1\"\n                    return\n                }\n                if(Indice > 0){\n                    mapa3[Mapa3Save[Indice - 1][1]][Mapa3Save[Indice - 1][0]] = 0;\n                }\n            }Indice++\n    },Ritmo)\n    }\n    let Caçar;\n    let Cronometro;\n    let HoraDaCaçada = 60;\n    function Cronometrar(){\n        Cronometro = setInterval(() => {\n            HoraDaCaçada--\n        },1000)\n    }\n    function IniciarACaçada(){\n        Caçar = setInterval( () => {\n            Ritmo = 3000;\n            Perseguição()\n        },60000)\n    }\n    function acelerar(teste){\n        if(teste){\n            clearInterval(Movimentar)\n            if(Ritmo >= 1000){\n                Ritmo -= 1000\n            }else if(Ritmo < 1000){\n                Ritmo -= 100;\n                if(Ritmo < 100){\n                    Ritmo = 90;\n                }\n            }\n            SaveIndice += 60;\n            Perseguição(MudandoDeFase);\n        }\n    }\n    function Tudodnv(){\n        clearInterval(Cronometro)\n        clearInterval(Caçar)\n        clearInterval(Movimentar)\n        clearInterval(Tempo)\n        HoraDaCaçada = 60;\n        Ritmo = 3000;\n        if(MudandoDeFase == \"nivel1\"){\n            for(let i in mapa1){\n            for(let j in mapa1[i]){\n                if(mapa1[i][j] == \"MINOS\" || mapa1[i][j] == \"DANTE\"){\n                    mapa1[i][j] = 0;\n                }\n            }\n        }\n        EixoX = PontoDeSave1[0];\n        EixoY = PontoDeSave1[1];\n        mapa1[EixoY][EixoX] = \"DANTE\";\n        }else if(MudandoDeFase == \"nivel2\"){\n            for(let i in mapa2){\n            for(let j in mapa2[i]){\n                if(mapa2[i][j] == \"MINOS\" || mapa2[i][j] == \"DANTE\"){\n                    mapa2[i][j] = 0;\n                }\n            }\n        }\n        EixoX = PontoDeSave2[0];\n        EixoY = PontoDeSave2[1];\n        mapa2[EixoY][EixoX] = \"DANTE\";\n        }else if(MudandoDeFase == \"nivel3\"){\n            for(let i in mapa3){\n            for(let j in mapa3[i]){\n                if(mapa3[i][j] == \"MINOS\" || mapa3[i][j] == \"DANTE\"){\n                    mapa3[i][j] = 0;\n                }\n            }\n        }\n        EixoX = PontoDeSave3[0];\n        EixoY = PontoDeSave3[1];\n        mapa3[EixoY][EixoX] = \"DANTE\";\n        }\n        Indice = 0;\n        SaveIndice = 60;\n        Mapa1Save = [];\n        Mapa2Save = [];\n        Mapa3Save = [];\n        return\n    }\n    let NumeroEscolhido = 0;\n    let Perguntas = [\n    \"Eis o Enigma: Fui levado para um quarto escuro e incendiado. Eu chorei e então minha cabeça foi cortada. Quem sou?\",\n    \"Eis o Enigma: Poder suficiente para esmagar navios e quebrar telhados mas mesmo assim tenho medo do sol. O que eu sou?\",\n    \"Eis o Enigma: Se você me tem, quer me compartilhar; se você não me compartilha, você me manteve. O que sou?\",\n    \"Eis o Enigma: Imagine que você está em uma sala escura ao lado de Sherlock. Nela há um fósforo, uma lampada de querosene, uma vela e uma lareira. O que você acenderia primeiro?\",\n    \"Eis o Enigma: Eu tenho uma coroa, mas não a uso na cabeça. Eu tenho cara, mas não tenho um corpo. Ter muitos de mim é sempre um bom negócio. o que eu sou?\",\n    \"Eis o Enigma: Eu vivo no céu, mas não tenho asas. Posso chorar, mas não tenho olhos. Onde quer que eu vá, a escuridão me segue. o que eu sou?\",\n    \"Eis o Enigma: Eu posso ser um deus, um planeta, e medir o calor. O que eu sou?\"\n];\n    let respostas = [\n    \"VELA\",\n    \"GELO\",\n    \"SEGREDO\",\n    \"FOSFORO\",\n    \"MOEDA\",\n    \"NUVEM\",\n    \"MERCURIO\"\n];\n    function PrimeiroNumero(minimo, maximo) {\n        minimo = Math.ceil(minimo);\n        maximo = Math.floor(maximo);\n    return Math.floor(Math.random() * (maximo - minimo) + minimo);\n    }\n    NumeroEscolhido = PrimeiroNumero(0,Perguntas.length); \n    function ProximoEnigma(){\n        NumeroEscolhido++\n        if(NumeroEscolhido == Perguntas.length){\n            NumeroEscolhido = 0;\n        }\n    }\n\n</script>\n<head>\n    <link rel=\"stylesheet\" href=\"/css/jogo.css\">\n    <link rel=\"stylesheet\" href=\"/css/newjogo.css\">\n    <link rel=\"stylesheet\" href=\"/css/ajuda.css\">\n</head>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n{#if (key)}\n        {#if (code == \"ArrowUp\") || (code == \"KeyW\")}\n\n            {MovimentaçãoPeloMapa(\"CIMA\")} <!--para cima-->\n        \n        {:else if (code == \"ArrowDown\") || (code == \"KeyS\")}\n\n            {MovimentaçãoPeloMapa(\"BAIXO\")} <!--para baixo-->\n\n        {:else if (code == \"ArrowLeft\") || (code == \"KeyA\")}\n\n            {MovimentaçãoPeloMapa(\"ESQUERDA\")} <!--para esquerda-->\n\n        {:else if (code == \"ArrowRight\") || (code == \"KeyD\")}\n\n            {MovimentaçãoPeloMapa(\"DIREITA\")} <!--para direita-->\n\n        {/if}\n{/if}\n\n{#if MudandoDeFase !== \"vitoria\"}\n\n<button class=\"ButtonVoltar\" on:click={() => trocarEstadoDoJogo('menu')}><p class=\"Voltar\">Voltar</p></button>\n\n{/if}\n\n<div>\n\t<audio id=\"audio\" autoplay loop>\n\t\t<source src=\"/css/sons/PlayMusicGame.wav\" type=\"audio/wav\">\n\t\t<source src=\"/css/sons/PlayMusicGame.ogg\" type=\"audio/ogg\">\n\t</audio>\n</div>\n\n{#if MudandoDeFase == \"tutorial\"}\n    \n    <p class='FasesDoJogo'>Tutorial</p>\n    <p class=\"Enigma\">Para uma melhor experiência recomendamos utilizar fones de ouvidos</p>\n    {#if !enigma}\n        \n    <p class=\"textofutil\">\n    {RenderizandoMapa()}\n    {DeterminandoEixos(MudandoDeFase)}\n    </p>\n    <div id=\"DicaTutorial\" class=\"aimds\">\n        <ul><h2 class=\"h2\">Como jogar?</h2></ul>\n        <ul class=\"info\">↟ ou W para Cima</ul>\n        <ul class=\"info\">↡ ou S para Baixo</ul>\n        <ul class=\"info\">↠ ou D para a Direita</ul>\n        <ul class=\"info\">↞ ou A para a Esquerda</ul>\n    </div>\n    <table class=\"mapa\" align=\"center\" id=\"mapatutorial\">\n        {#each mapa0 as linhas,i}\n        {#if LimiteY <= i && LimiteY + (Dimensionamento * 2) >= i}\n            <tr>\n                {#each linhas as elementos,j}\n                {#if LimiteX <= j && LimiteX + (Dimensionamento * 2) >= j}\n                    {#if elementos == 0}\n                        <th class=\"chaoturorial\"><img src=\"/css/imagens/chaotutorial.png\" alt=\"chao\"></th>\n                    {:else if elementos == 1}\n                        <th><img src=\"/css/imagens/paredetutorial.png\" alt=\"parede\"></th>\n                    {:else if elementos == \"X\"}\n                        <th><img src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n                    {:else if elementos == \"DANTE\"}\n                        <th class=\"Dante0\"><img src=\"/css/imagens/Dante.png\" alt=\"personagem\"></th>\n                    {/if}\n                {/if}\n                {/each}\n            </tr>\n        {/if}\n        {/each}\n    </table>\n        {:else}\n\n        <p class='Enigma'>Sempre que passar de fase, haverá um enigma a ser solucionado. </p>\n        <p class='Enigma'>Lembre-se: Existe um limite de tempo para resolver os enigmas. </p>\n        <p class='Enigma'>Ao atingir o limite de tempo para resolver o enigma em qualquer nível você voltará para o primeiro.</p>\n        <p class=\"Enigma\">OBS: Só serão aceitas letras maiúsculas nas respostas de todos os enigmas.</p>\n        <p class='Enigma'>Nenhuma das palavras-chave contém qualquer acento.</p>\n        <p class=\"Enigma\">Após compreender o funcionamento do Minos Labyrinth, digite: \"OK\" e poderá prosseguir para a primeira fase.</p>\n        <input bind:value={PalavraChave} on:keydown={Alterando(PalavraChave == \"OK\",MudandoDeFase)} placeholder=\"APENAS LETRAS MAIUSCULAS\" class='RespostaEnigma'>\n        {#each mapa0 as linhas}\n            <tr class=\"minimapa\">\n            {#each linhas as elementos}\n            {#if elementos == 0}\n            <th><img class=\"imgmini\" id=\"chao0\" src=\"/css/imagens/chaotutorial.png\" alt=\"chao\"></th>\n        {:else if elementos == 1}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredetutorial.png\" alt=\"parede\"></th>\n        {:else if elementos == \"X\"}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n        {:else if elementos == \"DANTE\"}\n            <th><img class=\"imgmini\" id=\"chao0\" src=\"/css/imagens/chaotutorial.png\" alt=\"personagem\"></th>\n        {/if}\n            {/each}\n        </tr>\n        {/each}\n\n    {/if}\n    {:else if MudandoDeFase == \"nivel1\"}\n\n    <p class='FasesDoJogo'>Nivel 1</p>\n\n    {#if !enigma}\n        \n    <p class=\"textofutil\">\n        {IniciarACaçada()}\n        {Cronometrar()}\n        {acelerar(Indice == SaveIndice)}\n        {clearInterval(Tempo)}\n        {RenderizandoMapa()}\n        {DeterminandoEixos(MudandoDeFase)}\n    </p>\n    {#if HoraDaCaçada > 0}\n        <p class=\"Enigma\">O Minotauro ira surgir em: {HoraDaCaçada}</p>\n    {:else if Ritmo == 3000}\n        <p class=\"Enigma\">O Minotauro começou a perseguição</p>\n    {:else if Ritmo == 2000}\n        <p class=\"Enigma\">O Minotauro acelerou o passo</p>\n    {:else if Ritmo == 1000}\n        <p class=\"Enigma\">O Minotauro começou a correr</p>\n    {:else if Ritmo < 1000}\n        <p class=\"Enigma\">O Minotauro está enfurecido</p>\n    {/if}\n    <table class=\"mapa\" align=\"center\" id=\"mapanivel1\">\n        {#each mapa1 as linhas,i}\n        {#if LimiteY <= i && LimiteY + (Dimensionamento * 2) >= i}\n            <tr>\n                {#each linhas as elementos,j}\n                {#if LimiteX <= j && LimiteX + (Dimensionamento * 2) >= j}\n                    {#if elementos == 0}\n                        <th ><img src=\"/css/imagens/chaonivel1.png\" alt=\"chao\"></th>\n                    {:else if elementos == 1}\n                        <th><img src=\"/css/imagens/paredenivel1.png\" alt=\"parede\"></th>\n                    {:else if elementos == \"Y\"}\n                        <th><img src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n                    {:else if elementos == \"DANTE\"}\n                        <th class=\"Dante1\"><img src=\"/css/imagens/Dante.png\" alt=\"personagem\"></th>\n                    {:else if elementos == 8}\n                        <th><img src=\"/css/imagens/saida.png\" alt=8></th>\n                    {:else if elementos == \"MINOS\"}\n                        <th><img src=\"/css/imagens/minotauro.png\" alt=\"monstro\"></th>\n                    {/if}\n                    {/if}\n                {/each}\n            </tr>\n            {/if}\n        {/each}\n    </table>\n    <div id=\"ContoDoMinotauro\" class=\"aimds\">\n        <ul class=\"info\">Há muito tempo atrás, mais tempo do que todas as suas gerações podem ter passado na terra,\n        Minotauro nasceu da relação da rainha de Creta com um touro dado por Poseidon.\n        O rei tomado pela raiva tentou matar o animal,\n        mas Poseidon interviu todas as vezes pela vida de sua criação.</ul>\n    </div>\n        {:else}\n        <p class=\"textofutil\">\n            {TempoEnigma()}\n            {ResertarContador()}\n            {ProximoEnigma()}\n        </p>\n        <p class=\"Enigma\">O que achou das provações resultantes de sua ações precipitadas?</p>\n        <p class=\"Enigma\">Deveria tomar cuidado, este não é um labirinto comum e os guardiões deste lugar não gostam de visitantes inesperados.</p>\n        <p class=\"Enigma\">Responda-me cautelosamente, deuses não costumam ser piedosos como tanto propagam.</p>\n        <p class=\"EnigmaPergunta\">{Perguntas[NumeroEscolhido] }</p>\n        <p class=\"Contador\">{contador}s</p>\n    <input bind:value={PalavraChave} on:keydown={Alterando(PalavraChave == respostas[NumeroEscolhido] ,MudandoDeFase)} placeholder=\"APENAS LETRAS MAIUSCULAS\" class='RespostaEnigma'>\n    {#each mapa1 as linhas}\n    <tr class=\"minimapa\">\n        {#each linhas as elementos}\n        {#if elementos == 0}\n            <th><img class=\"imgmini\" id=\"chao1\" src=\"/css/imagens/chaonivel1.png\" alt=\"chao\"></th>\n        {:else if elementos == 1}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredenivel1.png\" alt=\"parede\"></th>\n        {:else if elementos == \"Y\"}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n        {:else if elementos == \"DANTE\"}\n            <th><img class=\"imgmini\"id=\"chao1\" src=\"/css/imagens/chaonivel1.png\" alt=\"personagem\"></th>\n        {:else if elementos == 8}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=8></th>\n        {/if}\n        {/each}\n    </tr>\n    {/each}\n\n        {/if}\n    {:else if MudandoDeFase == \"nivel2\"}\n\n    <p class='FasesDoJogo'>Nivel 2</p>\n\n    {#if !enigma}\n     \n    <p class=\"textofutil\">\n        {IniciarACaçada()}\n        {Cronometrar()}\n        {acelerar(Indice == SaveIndice)}\n        {clearInterval(Tempo)}\n        {RenderizandoMapa()}\n        {DeterminandoEixos(MudandoDeFase)}\n    </p>\n    {#if HoraDaCaçada > 0}\n        <p class=\"Enigma\">O Minotauro ira surgir em: {HoraDaCaçada}</p>\n    {:else if Ritmo == 3000}\n        <p class=\"Enigma\">O Minotauro começou a perseguição</p>\n    {:else if Ritmo == 2000}\n        <p class=\"Enigma\">O Minotauro acelerou o passo</p>\n    {:else if Ritmo == 1000}\n        <p class=\"Enigma\">O Minotauro começou a correr</p>\n    {:else if Ritmo < 1000}\n        <p class=\"Enigma\">O Minotauro está enfurecido</p>\n    {/if}\n    <table class=\"mapa\" align=\"center\" id=\"mapanivel2\">\n        {#each mapa2 as linhas,i}\n        {#if LimiteY <= i && LimiteY + (Dimensionamento * 2) >= i}\n            <tr>\n                {#each linhas as elementos,j}\n                {#if LimiteX <= j && LimiteX + (Dimensionamento * 2) >= j}\n                    {#if elementos == 0}\n                        <th><img src=\"/css/imagens/chaonivel2.png\" alt=\"chao\"></th>\n                    {:else if elementos == 1}\n                        <th><img src=\"/css/imagens/paredenivel2.png\" alt=\"parede\"></th>\n                    {:else if elementos == \"Z\"}\n                        <th><img src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n                    {:else if elementos == \"DANTE\"}\n                        <th class=\"Dante2\"><img src=\"/css/imagens/Dante.png\" alt=\"personagem\"></th>\n                    {:else if elementos == 8}\n                        <th><img src=\"/css/imagens/saida.png\" alt=8></th>\n                    {:else if elementos == 7}\n                        <th><img src=\"/css/imagens/paredefalsanivel2.png\" alt=\"paredefalsa\"></th>\n                    {:else if elementos == \"MINOS\"}\n                        <th><img src=\"/css/imagens/minotauro.png\" alt=\"monstro\"></th>\n                    {/if}\n                    {/if}\n                {/each}\n            </tr>\n        {/if}\n        {/each}\n    </table>\n    <div id=\"ContoDoMinotauro\" class=\"aimds\">\n        <ul class=\"info\">Os deuses acataram a ira e súplicas do rei, mas não iriam contra Poseidon por um mero mortal. Então, com uma idéia de Atena, decidiram aprisionar o monstro em um labirinto. Desde então Minotauro vive de suas caçadas, e posso afirmar que ele sabe bem como tratar seus visitantes.</ul>\n    </div>\n        {:else}\n        <p class=\"textofutil\">\n\n            {TempoEnigma()}\n            {ResertarContador()}\n            {ProximoEnigma()}\n        </p>\n        <p class=\"Enigma\">Gostei de você, jovem.</p>\n        <p class=\"Enigma\">Como pôde perceber, nem tudo é o que parece.</p>\n        <p class=\"Enigma\">Espero não acostuma-lo mal, mas por enquanto vou aconselha-lo a não confiar tanto no que seus olhos vêem.</p>\n        <p class='Enigma'>Paredes falsas podem parecer algo impensável para humanos, mas não me compare com seres como vocês.</p>\n        <p class=\"EnigmaPergunta\">{Perguntas[NumeroEscolhido] }</p>\n        <p class=\"Contador\">{contador}</p>\n        <input bind:value={PalavraChave} on:keydown={Alterando(PalavraChave == respostas[NumeroEscolhido] ,MudandoDeFase)} placeholder=\"APENAS LETRAS MAIUSCULAS\" class='RespostaEnigma'>\n        {#each mapa2 as linhas}\n        <tr class=\"minimapa\">\n        {#each linhas as elementos}\n        {#if elementos == 0}\n            <th><img class=\"imgmini\" id=\"chao1\" src=\"/css/imagens/chaonivel2.png\" alt=\"chao\"></th>\n        {:else if elementos == 1}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredenivel2.png\" alt=\"parede\"></th>\n        {:else if elementos == \"Z\"}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n        {:else if elementos == \"DANTE\"}\n            <th><img class=\"imgmini\" id=\"chao1\" src=\"/css/imagens/chaonivel2.png\" alt=\"personagem\"></th>\n        {:else if elementos == 8}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=8></th>\n        {:else if elementos == 7}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredefalsanivel2.png\" alt=\"paredefalsa\"></th>\n        {/if}\n        {/each}\n    </tr>\n    {/each}\n\n        {/if}\n    {:else if MudandoDeFase == \"nivel3\"}\n\n    <p class='FasesDoJogo'>Nivel 3</p>\n\n    {#if !enigma}\n     \n    <p class=\"textofutil\">\n        {IniciarACaçada()}\n        {Cronometrar()}\n        {acelerar(Indice == SaveIndice)}\n        {clearInterval(Tempo)}\n        {RenderizandoMapa()}\n        {DeterminandoEixos(MudandoDeFase)}\n    </p>\n    {#if HoraDaCaçada > 0}\n        <p class=\"Enigma\">O Minotauro ira surgir em: {HoraDaCaçada}</p>\n    {:else if Ritmo == 3000}\n        <p class=\"Enigma\">O Minotauro começou a perseguição</p>\n    {:else if Ritmo == 2000}\n        <p class=\"Enigma\">O Minotauro acelerou o passo</p>\n    {:else if Ritmo == 1000}\n        <p class=\"Enigma\">O Minotauro começou a correr</p>\n    {:else if Ritmo < 1000}\n        <p class=\"Enigma\">O Minotauro está enfurecido</p>\n    {/if}\n    <table class=\"mapa\" align=\"center\" id=\"mapanivel3\">\n        {#each mapa3 as linhas,i}\n        {#if LimiteY <= i && LimiteY + (Dimensionamento * 2) >= i}\n            <tr>\n                {#each linhas as elementos,j}\n                {#if LimiteX <= j && LimiteX + (Dimensionamento * 2) >= j}\n                    {#if elementos == 0}\n                        <th ><img src=\"/css/imagens/chaonivel3.png\" alt=\"chao\"></th>\n                    {:else if elementos == 1}\n                        <th><img src=\"/css/imagens/paredenivel3.png\" alt=\"parede\"></th>\n                    {:else if elementos == \"V\"}\n                        <th><img src=\"/css/imagens/saidanivel3.png\" alt=\"saida\"></th>\n                    {:else if elementos == \"DANTE\"}\n                        <th class=\"Dante3\"><img src=\"/css/imagens/Dante.png\" alt=\"personagem\"></th>\n                    {:else if elementos == 8}\n                        <th><img src=\"/css/imagens/saida.png\" alt=8></th>\n                    {:else if elementos == 7}\n                        <th><img src=\"/css/imagens/paredefalsanivel2.png\" alt=\"paredefalsa\"></th>\n                    {:else if elementos == \"MINOS\"}\n                        <th><img src=\"/css/imagens/minotauro.png\" alt=\"monstro\"></th>\n                    {/if}\n                    {/if}\n                {/each}\n            </tr>\n            {/if}\n        {/each}\n    </table>\n    \n    <div id=\"ContoDoMinotauro\" class=\"aimds\">\n        <ul class=\"info\">Cuidado, os passos estão mais próximos a cada segundo. Consegue ouvir seu coração? Corra se quiser viver.</ul>\n    </div>\n        {:else}\n        <p class=\"textofutil\">\n\n            {TempoEnigma()}\n            {ResertarContador()}\n            {ProximoEnigma()}\n        </p>\n        <p class=\"Enigma\">Se saiu bem, Dante. Conseguiu sobreviver até aqui, mas será que realmente acabou?</p>\n        <p class=\"Enigma\">Seja rápido se deseja sobreviver.</p>\n        <p class=\"EnigmaPergunta\">{Perguntas[NumeroEscolhido] }</p>\n        <p class=\"Contador\">{contador}s</p>\n        <input bind:value={PalavraChave} on:keydown={Alterando(PalavraChave == respostas[NumeroEscolhido] ,MudandoDeFase)} placeholder=\"APENAS LETRAS MAIUSCULAS\" class='RespostaEnigma'>\n        {#each mapa3 as linhas}\n        <tr class=\"minimapa\">\n        {#each linhas as elementos}\n        {#if elementos == 0}\n            <th><img class=\"imgmini\" id=\"chao1\" src=\"/css/imagens/chaonivel3.png\" alt=\"chao\"></th>\n        {:else if elementos == 1}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredenivel3.png\" alt=\"parede\"></th>\n        {:else if elementos == \"V\"}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saidanivel3.png\" alt=\"saida\"></th>\n        {:else if elementos == \"DANTE\"}\n            <th><img class=\"imgmini\" id=\"chao1\" src=\"/css/imagens/chaonivel3.png\" alt=\"personagem\"></th>\n        {:else if elementos == 8}\n            <th><img class=\"imgmini\" src=\"/css/imagens/saida.png\" alt=8></th>\n        {:else if elementos == 7}\n            <th><img class=\"imgmini\" src=\"/css/imagens/paredefalsanivel3.png\" alt=\"paredefalsa\"></th>\n        {/if}\n        {/each}\n    </tr>\n    {/each}  \n        {/if}\n    {:else if MudandoDeFase == \"vitoria\"}\n    \n    {#if !enigma}\n\n    <Vitoria/>\n\n    <p class=\"textofutil\">\n    \n    {clearInterval(Tempo)}\n    {RenderizandoMapa()}\n    {DeterminandoEixos(MudandoDeFase)}\n    </p>\n<table id=\"mapanivel4\">\n    {#each mapa4 as linhas}\n    <tr>\n        {#each linhas as elementos}\n            {#if elementos == 0}\n                <th><img class=\"AjusteUnico\" src=\"/css/imagens/chaotunel.png\" alt=\"chao\"></th>\n            {:else if elementos == 1}\n                <th><img class=\"AjusteUnico\" src=\"/css/imagens/paredetunel.png\" alt=\"parede\"></th>\n            {:else if elementos == \"DANTE\"}\n                <th class=\"Dante4\"><img class=\"AjusteUnico\" src=\"/css/imagens/Dante.png\" alt=\"personagem\"></th>\n            {:else if elementos == \"C\"}\n                <th><img class=\"AjusteUnico\" src=\"/css/imagens/saida.png\" alt=\"saida\"></th>\n            {/if}\n        {/each}\n    </tr>\n    {/each}\n    </table>\n    {:else}\n    <head>\n        <link rel=\"stylesheet\" href=\"/css/AnimaçãoCreditos.css\">\n    </head>\n    <Creditos/>\n    {/if}\n{/if}\n"," <script>\n\timport Ajuda from './ajuda.svelte';\n\timport Menu from './menu.svelte';\n\timport Sobre from './sobre.svelte';\n\timport {estado} from './Estado.js';\n\timport NewJogo from './newjogo.svelte';\n    import Creditos from './creditos.svelte';\n</script>\n\n\n<head>\n\t<link rel=\"stylesheet\" href=\"/css/appsvelte.css\">\n\t<link rel='icon'  href='/css/imagens/icone.png'>\n</head>\n\n{#if $estado === 'menu'}\n\t<Menu/>\n{:else if $estado === 'jogar'}\n\t<NewJogo/>\n{:else if $estado === 'sobre'}\n\t<Sobre/>\n{:else if $estado ==='ajuda'}\n\t<Ajuda/>\n{:else if $estado === 'creditos'}\n\t<Creditos/>\n{/if}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["navigate","defaultNavigate","create_if_block_1","create_if_block_4","create_if_block_3","create_if_block_2"],"mappings":";;;;;IAAA,SAAS,IAAI,GAAG,GAAG;IAWnB,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAAS,GAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;IACD,IAAI,oBAAoB,CAAC;IACzB,SAAS,aAAa,CAAC,WAAW,EAAE,GAAG,EAAE;IACzC,IAAI,IAAI,CAAC,oBAAoB,EAAE;IAC/B,QAAQ,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC3D,KAAK;IACL,IAAI,oBAAoB,CAAC,IAAI,GAAG,GAAG,CAAC;IACpC,IAAI,OAAO,WAAW,KAAK,oBAAoB,CAAC,IAAI,CAAC;IACrD,CAAC;IAID,SAAS,QAAQ,CAAC,GAAG,EAAE;IACvB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,UAAU,EAAE;IAChE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,0CAA0C,CAAC,CAAC,CAAC;IAC9E,KAAK;IACL,CAAC;IACD,SAAS,SAAS,CAAC,KAAK,EAAE,GAAG,SAAS,EAAE;IACxC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;IAChD,IAAI,OAAO,KAAK,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;IACjE,CAAC;IAMD,SAAS,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE;IACzD,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC7D,CAAC;IAmPD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAoDD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IASD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;IACzB,QAAQ,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAK;IACL,CAAC;IACD,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;IACzB,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAmBD,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IA6BD,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IAgED,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IA4HD,SAAS,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE;IACvC,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;IAC7C,CAAC;IAgGD,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;IAClF,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;IACzD,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AA0OD;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;AA8HD;IACA,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;IAKD,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,SAAS,KAAK,GAAG;IACjB,IAAI,MAAM,eAAe,GAAG,iBAAiB,CAAC;IAC9C,IAAI,GAAG;IACP;IACA;IACA,QAAQ,OAAO,QAAQ,GAAG,gBAAgB,CAAC,MAAM,EAAE;IACnD,YAAY,MAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACzD,YAAY,QAAQ,EAAE,CAAC;IACvB,YAAY,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7C,YAAY,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,QAAQ,QAAQ,GAAG,CAAC,CAAC;IACrB,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,IAAI,qBAAqB,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;IACpB,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;IAeD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,CAAC;IACX,SAAS,YAAY,GAAG;IACxB,IAAI,MAAM,GAAG;IACb,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,MAAM;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IACnB,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC/B,YAAY,OAAO;IACnB,QAAQ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;IAC5B,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,SAAS,IAAI,QAAQ,EAAE;IACvB,QAAQ,QAAQ,EAAE,CAAC;IACnB,KAAK;IACL,CAAC;IAgqBD,SAAS,gBAAgB,CAAC,KAAK,EAAE;IACjC,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC;IACvB,CAAC;IAID,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IACnE,IAAI,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IACpD,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC,aAAa,EAAE;IACxB;IACA,QAAQ,mBAAmB,CAAC,MAAM;IAClC,YAAY,MAAM,cAAc,GAAG,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtF;IACA;IACA;IACA,YAAY,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE;IACzC,gBAAgB,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAChE,aAAa;IACb,iBAAiB;IACjB;IACA;IACA,gBAAgB,OAAO,CAAC,cAAc,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvC,SAAS,CAAC,CAAC;IACX,KAAK;IACL,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC5B,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAC/B,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAChD;IACA;IACA,QAAQ,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IACpB,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5G,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,EAAE;IACf;IACA,QAAQ,KAAK;IACb,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,KAAK,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IAClG;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK;IACb,QAAQ,UAAU,EAAE,KAAK;IACzB,QAAQ,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,gBAAgB,CAAC,EAAE,CAAC,IAAI;IACxD,KAAK,CAAC;IACN,IAAI,aAAa,IAAI,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,KAAK;IACxE,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;IACnE,gBAAgB,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,CAAC;IACV,UAAU,EAAE,CAAC;IACb,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B;IACA,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACpE,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAE7B,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClC,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IAE1F,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAiDD;IACA;IACA;IACA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;IACvC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChH,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;IAClC,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IAKD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1C,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IAKD,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAgBD,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;IAC9F,IAAI,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvG,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,IAAI,oBAAoB;IAC5B,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,OAAO,MAAM;IACjB,QAAQ,YAAY,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1F,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACjC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,YAAY,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE;IACA,QAAQ,YAAY,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IASD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAClC,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;IAC/B,QAAQ,OAAO;IACf,IAAI,YAAY,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACrC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;IACzF,QAAQ,IAAI,GAAG,GAAG,gDAAgD,CAAC;IACnE,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;IAC3E,YAAY,GAAG,IAAI,+DAA+D,CAAC;IACnF,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1C,IAAI,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,+BAA+B,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,KAAK;IACL,CAAC;IA+BD;IACA;IACA;IACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,IAAI,cAAc,GAAG,GAAG;IACxB,IAAI,aAAa,GAAG,GAAG;IACvB;;ICnsEA,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAW5B;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE;IACvC,IAAI,IAAI,IAAI,CAAC;IACb,IAAI,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;IAClC,IAAI,SAAS,GAAG,CAAC,SAAS,EAAE;IAC5B,QAAQ,IAAI,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;IAC9C,YAAY,KAAK,GAAG,SAAS,CAAC;IAC9B,YAAY,IAAI,IAAI,EAAE;IACtB,gBAAgB,MAAM,SAAS,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC;IAC3D,gBAAgB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;IACtD,oBAAoB,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IACpC,oBAAoB,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC7D,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,EAAE;IAC/B,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACzE,wBAAwB,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxE,qBAAqB;IACrB,oBAAoB,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IAChD,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,SAAS,MAAM,CAAC,EAAE,EAAE;IACxB,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,KAAK;IACL,IAAI,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;IAC/C,QAAQ,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC7C,QAAQ,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACpC,QAAQ,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE;IACpC,YAAY,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;IACtC,SAAS;IACT,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,QAAQ,OAAO,MAAM;IACrB,YAAY,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,YAAY,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE;IACxC,gBAAgB,IAAI,EAAE,CAAC;IACvB,gBAAgB,IAAI,GAAG,IAAI,CAAC;IAC5B,aAAa;IACb,SAAS,CAAC;IACV,KAAK;IACL,IAAI,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;IACtC;;ICzDA;IACO,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACrC;IACO,SAAS,kBAAkB,CAAC,UAAU,EAAE;IAC/C,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAC;IACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OCHA,UAEO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OADN,UAA4C,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAG7C,UAAiI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA/G,UAA0G,CAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAApC,UAA2B,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAvD,CAAA,MAAA,aAAA,GAAA,MAAA,kBAAkB,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OCJrF,UAEO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OADH,UAA6C,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;OAKjD,UAMM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OALF,UAAwC,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAApC,UAA+B,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OACnC,UAAsC,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OACtC,UAAuC,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OACvC,UAA2C,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OAC3C,UAA4C,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;OAGhD,UAIM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OAHF,UAAsD,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAAlD,UAA6C,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OACjD,UAA4E,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAAxE,UAAiC,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OAAC,UAAiC,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OACvE,UAAsD,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAAlD,UAA6C,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OAErD,UAIM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OAHF,UAAsD,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAAlD,UAA6C,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OACjD,UAA2E,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OAAvE,UAAiC,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;OAAA,UAAiC,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;OACtE,UAAsD,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OAAlD,UAA6C,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;OAGrD,UAA6C,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC7C,UAAyE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACzE,UAAiG,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACjG,UAA0B,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC1B,UAAwC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACxC,UAA+B,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC/B,UAA0C,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC1C,UAAgD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAEhD,UACiE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OCpCjE,UAEO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OADH,UAA4C,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAGhD,UAA6B,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC7B,UAA8B,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAG9B,UAKM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAJF,UAAkI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAAhH,UAA2G,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;OAAnC,UAA0B,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;;OACpH,UAAuI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAArH,UAAgH,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;OAAxC,UAA+B,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;;OACzH,UAAkI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAAhH,UAA2G,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;OAAnC,UAA0B,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;;OACpH,UAAuI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAArH,UAAgH,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;OAAtC,UAA6B,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAH5D,CAAA,MAAA,aAAA,GAAA,MAAA,kBAAkB,CAAC,OAAO,CAAA,CAAA;IAC1B,CAAA,MAAA,eAAA,GAAA,MAAA,kBAAkB,CAAC,OAAO,CAAA,CAAA;IAC1B,CAAA,MAAA,eAAA,GAAA,MAAA,kBAAkB,CAAC,OAAO,CAAA,CAAA;IAC3B,CAAA,MAAA,eAAA,GAAA,MAAA,kBAAkB,CAAC,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCuCtF,wBAAsB,CAAA,CAAA;;kBAAI,kCAAiC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAlDlE,UAEO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OADH,UAA6C,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;OAEjD,UAAuC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAEvC,UAYI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAGJ,UAA+C,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE/C,UAGI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAGJ,UAAmC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAEnC,UAAwB,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAExB,UAEC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAA,UAAuB,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAEvB,UAA8W,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAE9W,UAA4B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAC5B,UAAgb,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAEhb,UAAwB,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACzB,UAA4b,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAE3b,UAA0B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAC3B,UAAwxB,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAEvxB,UAAgC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE9B,UAAmB,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAClB,UAAkE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAAzC,UAAI,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OC/BjC,UAA0B,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAE1B,UAAyC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACzC,UAA2H,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAC3H,UAA2F,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAC3F,UAA4G,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAC5G,UAAoG,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACpG,UAAyD,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACzD,UAA6E,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCQ5D,UAAS,CAAA,CAAA;;kBAAI,qBAAmB,CAAA,CAAA;;kBAAI,8BAA4B,CAAA,CAAA;;;;;;;;;kBAIhE,UAAS,CAAA,CAAA;;kBAAI,qBAAmB,CAAA,CAAA;;kBAAI,8BAA4B,CAAA,CAAA;;;;;;;;;kBAIhE,UAAS,CAAA,CAAA;;kBAAI,qBAAmB,CAAA,CAAA;;kBAAI,4BAA0B,CAAA,CAAA;;;;;;;;;;kBAI9D,UAAS,CAAA,CAAA;;kBAAI,qBAAmB,CAAA,CAAA;;kBAAI,iCAA+B,CAAA,CAAA;;;;;;;;;kBAInE,UAAS,CAAA,CAAA;;kBAAI,qBAAmB,CAAA,CAAA;;kBAAI,6BAA2B,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OApDhF,UAGO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OAFH,UAAgD,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;OAChD,UAA4C,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;OAGhD,UAA+B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE/B,UAAsC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACtC,UAAqC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACrC,UAA0C,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC1C,UAAsC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACtC,UAAwC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAExC,UAA+B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE/B,UAAsC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACtC,UAAqC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACrC,UAA0C,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC1C,UAAsC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACtC,UAAwC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAExC,UAAiC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAEjC,UAAsC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACtC,UAAqC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAErC,UAA8B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE9B,UAAmC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OACnC,UAA8B,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAG9B,UAAkC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAElC,UAAwC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAExC,UAA+I,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAArH,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAAmB,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAA4B,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAAA,UAAsD,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OAE3I,UAAuC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAEvC,UAA6I,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAAnH,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAAmB,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAA4B,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAAA,UAAiD,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OAEtI,UAA4C,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE5C,UAA4I,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAAlH,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAAmB,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAA0B,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAAC,UAAkD,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OAEtI,UAAwC,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAExC,UAAqJ,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAA3H,UAAI,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAAmB,UAAI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;OAA+B,UAAI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OAAA,UAAsD,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OAE9I,UAA0C,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE1C,UAAkJ,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAAxH,UAAI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;OAAmB,UAAI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;;OAA2B,UAAI,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;OAAA,UAAwD,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OAE5I,UAA4C,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;OAE5C,UAAgD,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC3DhD;IACA;IACA;IACA;IACA;AAGA;IACO,MAAM,UAAU,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,UAAU,CAAC;AAC/D;IACO,MAAM,QAAQ,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC;AAC3D;IACA;IACA;IACA;IACA;IACO,SAAS,cAAc,CAAC,KAAK,EAAE;IACtC,CAAC;IACD,EAAE,CAAC,KAAK,CAAC,gBAAgB;IACzB,EAAE,KAAK,CAAC,MAAM,KAAK,CAAC;IACpB,EAAE,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC;IACrE,GAAG;IACH,CAAC;AAUD;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,cAAc,GAAG;IACjC,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;AASD;IACO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;AACnD;IACO,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;IACnD,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC,OAAO,MAAM,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxD;;ICrDO,MAAM,MAAM,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;;ICAjE;IACA;IACO,MAAM,OAAO,GAAG,CAAC,CAAC;IAClB,MAAM,QAAQ,GAAG,CAAC,CAAC;IACnB,MAAM,SAAS,GAAG,CAAC,CAAC;IACpB,MAAM,YAAY,GAAG,CAAC,CAAC;IACvB,MAAM,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAM,YAAY,GAAG,CAAC,CAAC;IACvB,MAAM,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,iBAAiB,GAAG,CAAC,CAAC;IAC5B,MAAM,cAAc,GAAG,EAAE,CAAC;IAC1B,MAAM,WAAW,GAAG,EAAE,CAAC;AAC9B;IACA,MAAM,MAAM,GAAG;IACf,CAAC,CAAC,OAAO,GAAG,MAAM;IAClB,CAAC,CAAC,QAAQ,GAAG,OAAO;IACpB,CAAC,CAAC,SAAS,GAAG,QAAQ;IACtB,CAAC,CAAC,YAAY,GAAG,UAAU;IAC3B,CAAC,CAAC,eAAe,GAAG,aAAa;IACjC,CAAC,CAAC,YAAY,GAAG,UAAU;IAC3B,CAAC,CAAC,eAAe,GAAG,aAAa;IACjC,CAAC,CAAC,aAAa,GAAG,WAAW;IAC7B,CAAC,CAAC,iBAAiB,GAAG,eAAe;IACrC,CAAC,CAAC,cAAc,GAAG,YAAY;IAC/B,CAAC,CAAC,WAAW,GAAG,UAAU;IAC1B,CAAC,CAAC;AACF;IACO,MAAM,WAAW,GAAG,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AACtD;IACO,SAAS,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE;IACjD,CAAC,IAAI,IAAI,CAAC;IACV,CAAC,IAAI,OAAO,KAAK,QAAQ,EAAE;IAC3B,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACzD,EAAE,MAAM,IAAI,OAAO,KAAK,OAAO,EAAE;IACjC,EAAE,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,EAAE,MAAM,IAAI,OAAO,KAAK,SAAS,EAAE;IACnC,EAAE,IAAI,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,EAAE;IACF,CAAC,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;IACpD,CAAC;AACD;IACO,SAAS,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE;IACjE,CAAC,MAAM,MAAM,GAAG,KAAK,IAAI,gBAAgB,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9D,CAAC,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC,MAAM,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;IAC5D,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;IACxC,CAAC;AACD;IACO,MAAM,oBAAoB;IACjC,CAAC,OAAO;IACR,CAAC,CAAC,GAAG,IAAI;IACT,EAAE,OAAO,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAKlC;IACA;IACO,MAAM,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC;;IC0NtD,MAAM,oBAAoB,GAAG,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AACrE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAM,SAAS,GAAG,IAAI,IAAI;IACjC,CAAC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,MAAM,cAAc,GAAG,WAAW,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC,MAAM,YAAY,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC;IACvC,CAAC,MAAM,IAAI,GAAG,YAAY;IAC1B,IAAI,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACjD,IAAI,EAAE,CAAC;IACP,CAAC,MAAM,iBAAiB,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC;IAC5E,CAAC,MAAM,MAAM,GAAG,cAAc;IAC9B,IAAI,oBAAoB,CAAC,MAAM,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;IAChE,IAAI,EAAE,CAAC;IACP,CAAC,MAAM,QAAQ;IACf,EAAE,CAAC,cAAc;IACjB,KAAK,MAAM,CAAC,iBAAiB,EAAE,CAAC,EAAE,WAAW,CAAC;IAC9C,KAAK,iBAAiB,KAAK,GAAG,CAAC;IAC/B,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IACnC,CAAC;;IC7TD;IACA;IACA;IACA;IACA;AAKA;IACA,MAAM,GAAG,GAAG,KAAK,CAAC;IAClB,MAAM,IAAI,GAAG,MAAM,CAAC;IACpB,MAAM,OAAO,GAAG,SAAS,CAAC;AAC1B;IACA,SAAS,WAAW,CAAC,MAAM,EAAE;IAC7B,CAAC,OAAO;IACR,EAAE,GAAG,MAAM,CAAC,QAAQ;IACpB,EAAE,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC1D,EAAE,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK;IAC7B,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;IACxE,EAAE,CAAC;IACH,CAAC;AACD;IACA,SAAS,aAAa,CAAC,MAAM,EAAE;IAC/B,CAAC,IAAI,SAAS,GAAG,EAAE,CAAC;IACpB,CAAC,IAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC;AAClB;IACA,CAAC,MAAM,eAAe,GAAG,CAAC,WAAW,GAAG,SAAS;IACjD,EAAE,WAAW,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAClE;IACA,CAAC,OAAO;IACR,EAAE,IAAI,QAAQ,GAAG;IACjB,GAAG,OAAO,QAAQ,CAAC;IACnB,GAAG;IACH,EAAE,MAAM,CAAC,QAAQ,EAAE;IACnB,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B;IACA,GAAG,MAAM,gBAAgB,GAAG,MAAM;IAClC,IAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,IAAI,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChC,IAAI,CAAC;AACL;IACA;IACA,GAAG,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/B;IACA,GAAG,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;IACtE,GAAG,OAAO,MAAM;IAChB,IAAI,QAAQ,EAAE,CAAC;IACf,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,QAAQ,CAAC,CAAC;IACxD,IAAI,CAAC;IACL,GAAG;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE;IACxB,GAAG,MAAM,EAAE,KAAK,GAAG,EAAE,EAAE,OAAO,GAAG,KAAK,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC;IACzD,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC;IACrC,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE;IACrB,IAAI,IAAI,OAAO,EAAE;IACjB,KAAK,IAAI;IACT,MAAM,WAAW;IACjB,MAAM,2DAA2D;IACjE,OAAO,2DAA2D;IAClE,OAAO,mBAAmB;IAC1B,MAAM,CAAC;IACP,KAAK;IACL,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B,IAAI,MAAM;IACV,IAAI,MAAM,UAAU,GAAG,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,CAAC;IAC5D;IACA,IAAI,IAAI;IACR,KAAK,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,cAAc,GAAG,WAAW,CAAC;IAC3D,MAAM,UAAU;IAChB,MAAM,EAAE;IACR,MAAM,EAAE;IACR,MAAM,CAAC;IACP,KAAK,CAAC,OAAO,CAAC,EAAE;IAChB,KAAK,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,KAAK;IACL,IAAI;AACJ;IACA,GAAG,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IAClC,GAAG,eAAe,EAAE,CAAC;IACrB,GAAG;IACH,EAAE,CAAC;IACH,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;IACtC,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC;IACrC,CAAC;AACD;IACA;IACA,SAAS,kBAAkB,CAAC,eAAe,GAAG,GAAG,EAAE;IACnD,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;IACf,CAAC,IAAI,KAAK,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;AACvD;IACA,CAAC,OAAO;IACR;IACA,EAAE,IAAI,OAAO,GAAG;IAChB,GAAG,OAAO,KAAK,CAAC;IAChB,GAAG;IACH,EAAE,IAAI,QAAQ,GAAG;IACjB,GAAG,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;IACvB,GAAG;IACH,EAAE,gBAAgB,GAAG,EAAE;IACvB,EAAE,mBAAmB,GAAG,EAAE;IAC1B,EAAE,OAAO,EAAE;IACX,GAAG,IAAI,KAAK,GAAG;IACf,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;IAC9B,IAAI;IACJ,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IAChC,IAAI,KAAK,EAAE,CAAC;IACZ;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClC,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,IAAI;IACJ,GAAG,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IACnC,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAChD,IAAI;IACJ,GAAG,EAAE,CAAC,EAAE,EAAE;IACV,IAAI,MAAM,QAAQ,GAAG,KAAK,GAAG,EAAE,CAAC;IAChC,IAAI,IAAI,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACrD,KAAK,OAAO;IACZ,KAAK;IACL,IAAI,KAAK,GAAG,QAAQ,CAAC;IACrB,IAAI;IACJ,GAAG;IACH,EAAE,CAAC;IACH,CAAC;AACD;IACA;IACA;IACA,MAAM,SAAS,GAAG,CAAC;IACnB,CAAC,CAAC,KAAK;IACP,CAAC,MAAM,CAAC,QAAQ;IAChB,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa;IAC9B,CAAC,CAAC;IACF;IACA,MAAM,cAAc,GAAG,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC;IACnE,MAAM,aAAa,GAAG,aAAa;IACnC,CAAC,SAAS,IAAI,CAAC,cAAc,GAAG,MAAM,GAAG,kBAAkB,EAAE;IAC7D,CAAC,CAAC;IACF,MAAM,EAAE,QAAQ,EAAE,GAAG,aAAa;;IC/JlC;IACA;IACA;IACA;IACA;AAIA;IACA,MAAM,YAAY;IAClB,CAAC,SAAS;IACV,CAAC,CAAC,IAAI,EAAEA,UAAQ,GAAGC,QAAe,KAAK;IACvC,EAAE,MAAM,WAAW,GAAG,KAAK,IAAI;IAC/B,GAAG,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,GAAG,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;IAChE,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,IAAI,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;IAC7D,IAAID,UAAQ,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC9D,IAAI;IACJ,GAAG,CAAC;IACJ,EAAE,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC3D,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;IAC/B,EAAE,CAAC;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAM,IAAI,gBAAgB,YAAY,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICgoB9D,EAAA,aAAA,GAAI,CAAI,CAAA,CAAA,IAAA,SAAS,aAAM,GAAI,OAAI,MAAM,EAAA,OAAA,kBAAA,CAAA;IAIhC,EAAA,aAAA,GAAI,CAAI,CAAA,CAAA,IAAA,WAAW,aAAM,GAAI,OAAI,MAAM,EAAA,OAAA,kBAAA,CAAA;IAIvC,EAAA,aAAA,GAAI,CAAI,CAAA,CAAA,IAAA,WAAW,aAAM,GAAI,OAAI,MAAM,EAAA,OAAA,kBAAA,CAAA;IAIvC,EAAA,aAAA,GAAI,CAAI,CAAA,CAAA,IAAA,YAAY,aAAM,GAAI,OAAI,MAAM,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAE9C,CAAA,IAAA,OAAA,4BAAA,GAAoB,KAAC,SAAS,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAJ9B,CAAA,IAAA,OAAA,4BAAA,GAAoB,KAAC,UAAU,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAJ/B,CAAA,IAAA,OAAA,4BAAA,GAAoB,KAAC,OAAO,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAJ5B,CAAA,IAAA,OAAA,4BAAA,GAAoB,KAAC,MAAM,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmBxC,UAA8G,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;OAArC,UAA4B,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAsV3F,GAAM,CAAA,EAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAtFN,GAAM,CAAA,EAAA,CAAA,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;OAFZ,UAAkC,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAxF5B,GAAM,CAAA,EAAA,CAAA,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;OAFZ,UAAkC,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBArF5B,GAAM,CAAA,EAAA,CAAA,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;OAFZ,UAAkC,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBA9D5B,GAAM,CAAA,EAAA,CAAA,EAAA,OAAAE,mBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;OAFZ,UAAmC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACnC,UAAwF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAoWxF,UAEO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OADH,UAAwD,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAvB3D,CAAA,IAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;yCACnB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;IAChB,CAAA,IAAA,QAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;mCAGzB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;uCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAPN,UAKI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;OACR,UAgBY,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;IApBP,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,CAAA,CAAA,CAAA,aAAA,IAAA,KAAA,QAAA,MAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAEnB,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,KAAA,QAAA,MAAA,QAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;kCAGzB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAUM,UAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAvE,UAAkE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtE,UAA+F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA5E,UAAuE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1F,UAAkF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA9E,UAAyE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF7E,UAA8E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA1E,UAAqE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IADxE,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAPvB,GAAM,CAAA,EAAA,CAAA,CAAA;;;;uCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;OADV,UAYK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;mCAXM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAtCqB,CAAA,IAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;mCAG7C,GAAK,CAAA,CAAA,CAAA,CAAA;;;;uCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;2CATD,GAAW,CAAA,EAAA,CAAA,EAAA,CAAA;mCACX,GAAgB,CAAA,EAAA,CAAA,EAAA,CAAA;gCAChB,GAAa,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;+BAKG,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;kBAAC,GAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;OAT/B,UAKI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACJ,UAAuG,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACvG,UAAuD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACvD,UAA2D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;OAC3D,UAAmC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;OACnC,UAAiL,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;+CAA9J,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;IAAc,OAAA,IAAA,WAAA,eAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAA,EAAA,CAAA,qBAAC,GAAe,CAAG,EAAA,CAAA,CAAA,oBAAA,GAAa,CAAnE,CAAA,CAAA,CAAA,CAAA,gBAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAC,EAAA,CAAA,qBAAA,GAAe,yBAAG,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;IAFrF,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,uBAAA,MAAA,IAAA,SAAA,MAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;wEAC/B,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;;gFACV,GAAY,CAAA,EAAA,CAAA,EAAA;gDAAZ,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;kCACxB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA7DL,GAAc,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;oCACd,GAAW,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;iCACX,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;IAC7B,CAAA,IAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;yCACnB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;IAChB,CAAA,IAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;IAE/B,EAAA,qBAAA,GAAY,OAAG,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEX,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,OAAG,IAAI,EAAA,OAAA,kBAAA,CAAA;;;;;mCAIX,GAAK,CAAA,CAAA,CAAA,CAAA;;;;uCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OApBV,UAOI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;OAYJ,UA0BQ,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;OAER,UAEM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OADF,UAA+H,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;4FA7C9H,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAC7B,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,aAAA,IAAA,IAAA,QAAA,MAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAEnB,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,SAAA,MAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;kCAczB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAwDF,UAAyF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAArF,UAAgF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFpF,UAAiE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7D,UAAwD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5D,UAA4F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxF,UAAmF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFvF,UAA6E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzE,UAAoE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFxE,UAA+E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3E,UAAsE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1E,UAAsF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAlF,UAA6E,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IADhF,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAXjB,GAAM,CAAA,EAAA,CAAA,CAAA;;;;uCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;OADN,UAgBC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;mCAfM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA/CN,UAAiD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFjD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAuD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAFrC,6BAA2B,CAAA,CAAA;kCAAC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;OAA1D,UAA+D,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;iFAAjB,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;oCAc3C,GAAM,CAAA,EAAA,CAAA,CAAA;;;;uCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;OADV,UAoBK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;mCAnBM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAEG,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAC1B,UAA6D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzD,UAAoD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFxD,UAAyE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAArE,UAAgE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFpE,UAAiD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7C,UAAwC,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5C,UAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxD,UAAmD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtE,UAA6D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzD,UAAoD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFxD,UAA+D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3D,UAAsD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1D,UAA4D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAvD,UAAkD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;gCAF1D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAH5D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAnD9B,CAAA,IAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;mCAG7C,GAAK,CAAA,CAAA,CAAA,CAAA;;;;uCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;2CAXD,GAAW,CAAA,EAAA,CAAA,EAAA,CAAA;mCACX,GAAgB,CAAA,EAAA,CAAA,EAAA,CAAA;gCAChB,GAAa,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;+BAOG,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAX7B,UAKI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACJ,UAA4C,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC5C,UAAkE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAClE,UAA+H,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC/H,UAAyH,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACzH,UAA2D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;OAC3D,UAAkC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;OAClC,UAAiL,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;+CAA9J,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;IAAc,OAAA,IAAA,WAAA,eAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAA,EAAA,CAAA,qBAAC,GAAe,CAAG,EAAA,CAAA,CAAA,oBAAA,GAAa,CAAnE,CAAA,CAAA,CAAA,CAAA,gBAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAC,EAAA,CAAA,qBAAA,GAAe,yBAAG,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;IAFrF,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,uBAAA,MAAA,IAAA,SAAA,MAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;wEAC/B,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;;gFACV,GAAY,CAAA,EAAA,CAAA,EAAA;gDAAZ,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;kCACxB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA9DL,GAAc,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;oCACd,GAAW,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;iCACX,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;IAC7B,CAAA,IAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;yCACnB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;IAChB,CAAA,IAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;IAE/B,EAAA,qBAAA,GAAY,OAAG,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEX,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,OAAG,IAAI,EAAA,OAAA,kBAAA,CAAA;;;;;kCAIX,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OApBV,UAOI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;OAYJ,UA0BQ,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;OACR,UAEM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OADF,UAA4S,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;4FA5C3S,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAC7B,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,aAAA,IAAA,IAAA,QAAA,MAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAEnB,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,SAAA,MAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;iCAczB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;qCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyDF,UAAyF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAArF,UAAgF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFpF,UAAiE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7D,UAAwD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5D,UAA4F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxF,UAAmF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFvF,UAAuE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnE,UAA8D,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlE,UAA+E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3E,UAAsE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1E,UAAsF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAlF,UAA6E,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IADhF,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAXjB,GAAM,CAAA,EAAA,CAAA,CAAA;;;;uCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;OADN,UAgBC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;mCAfM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;2CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAhDN,UAAiD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFjD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAuD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAFrC,6BAA2B,CAAA,CAAA;kCAAC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;OAA1D,UAA+D,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;iFAAjB,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;mCAc3C,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;OADV,UAoBK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;kCAnBM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;qCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAEG,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAC1B,UAA6D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzD,UAAoD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFxD,UAAyE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAArE,UAAgE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFpE,UAAiD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7C,UAAwC,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5C,UAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxD,UAAmD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtE,UAAuD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnD,UAA8C,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAA+D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3D,UAAsD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1D,UAA2D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAvD,UAAkD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;gCAFzD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAH5D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAjD9B,CAAA,IAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;kCAGjD,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;2CAVG,GAAW,CAAA,EAAA,CAAA,EAAA,CAAA;mCACX,GAAgB,CAAA,EAAA,CAAA,EAAA,CAAA;gCAChB,GAAa,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;+BAMG,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;kBAAC,GAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;OAT/B,UAII,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACJ,UAAsF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACtF,UAA2I,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAC3I,UAAuG,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACvG,UAA2D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;OAC3D,UAAmC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;OACvC,UAAiL,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;+CAA9J,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;IAAc,OAAA,IAAA,WAAA,eAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAA,EAAA,CAAA,qBAAC,GAAe,CAAG,EAAA,CAAA,CAAA,oBAAA,GAAa,CAAnE,CAAA,CAAA,CAAA,CAAA,gBAAA,GAAS,sBAAC,GAAY,CAAA,EAAA,CAAA,kBAAI,GAAS,CAAC,EAAA,CAAA,qBAAA,GAAe,yBAAG,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;IAFjF,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,uBAAA,MAAA,IAAA,SAAA,MAAA,SAAA,iBAAA,GAAS,yBAAC,GAAe,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;wEAC/B,GAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;;gFACd,GAAY,CAAA,EAAA,CAAA,EAAA;gDAAZ,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;iCACxB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;qCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCA7DD,GAAc,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;oCACd,GAAW,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;iCACX,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;IAC7B,CAAA,IAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;yCACnB,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;IAChB,CAAA,IAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;IAE/B,EAAA,qBAAA,GAAY,OAAG,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEX,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,QAAI,IAAI,EAAA,OAAA,kBAAA,CAAA;IAEb,EAAA,cAAA,GAAK,OAAG,IAAI,EAAA,OAAA,kBAAA,CAAA;;;;;kCAIX,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OApBV,UAOI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;OAYJ,UAwBQ,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;OACR,UAKM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAJF,UAGmE,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;4FA7ClE,GAAQ,CAAA,EAAA,CAAA,YAAC,GAAM,CAAA,EAAA,CAAA,mBAAI,GAAU,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAC7B,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,aAAA,IAAA,IAAA,QAAA,MAAA,QAAA,GAAA,aAAa,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAEnB,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,SAAA,MAAA,SAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;iCAczB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;qCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsDF,UAAiE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7D,UAAwD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5D,UAA2F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAvF,UAAkF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtF,UAAuE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnE,UAA8D,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlE,UAA+E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3E,UAAsE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1E,UAAsF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAlF,UAA6E,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IADhF,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCATjB,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;OADV,UAcK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;kCAbM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;qCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA/CN,UAAiD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFjD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAkD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAuD,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAFrC,6BAA2B,CAAA,CAAA;kCAAC,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;OAA1D,UAA+D,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;iFAAjB,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;mCAc3C,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;OADV,UAkBK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;kCAjBM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;qCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAEG,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;IAEpB,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,kBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAC1B,UAA6D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzD,UAAoD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFxD,UAAiD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7C,UAAwC,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5C,UAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxD,UAAmD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtE,UAAuD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnD,UAA8C,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAA+D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA3D,UAAsD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF1D,UAA4D,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAvD,UAAkD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;gCAF1D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAH5D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCA5ClD,GAAK,CAAA,CAAA,CAAA,CAAA;;;;sCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAPN,UAAqF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACrF,UAAqF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACrF,UAAyH,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACzH,UAAgG,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OAChG,UAAwE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACxE,UAAiI,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;OACjI,UAA0J,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;+CAAvI,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;IAAc,OAAA,IAAA,WAAA,eAAA,GAAS,CAAC,EAAA,CAAA,kBAAA,GAAY,CAAI,EAAA,CAAA,IAAA,IAAI,oBAAC,GAAa,CAA5C,CAAA,CAAA,CAAA,CAAA,gBAAA,GAAS,CAAC,EAAA,CAAA,kBAAA,GAAY,CAAI,EAAA,CAAA,IAAA,IAAI,oBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;gFAAtE,GAAY,CAAA,EAAA,CAAA,EAAA;gDAAZ,GAAY,CAAA,EAAA,CAAA,CAAA,CAAA;;;;iCACxB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;qCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAxCT,GAAgB,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;;;IAChB,CAAA,IAAA,QAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;gCAUrB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;oCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAZV,UAGI,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;OACJ,UAMM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OALF,UAAwC,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;OAApC,UAA+B,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;OACnC,UAAsC,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OACtC,UAAuC,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OACvC,UAA2C,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAC3C,UAA4C,CAAA,GAAA,EAAA,GAAA,CAAA,CAAA;;OAEhD,UAoBQ,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;IA7BP,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,qBAAA,GAAA,IAAA,QAAA,MAAA,QAAA,yBAAA,GAAiB,uBAAC,GAAa,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;+BAUrB,GAAK,CAAA,CAAA,CAAA,CAAA;;;;mCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuCF,UAA8F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA1F,UAAqF,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFzF,UAAuE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnE,UAA8D,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlE,UAAiF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7E,UAAwE,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5E,UAAwF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAApF,UAA+E,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IAD9E,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,iBAAA,CAAA;IAEb,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,iBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,kBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAPnB,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;OADN,UAYC,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;kCAXM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;qCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;mCA5BK,GAAM,CAAA,EAAA,CAAA,CAAA;;;;sCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;OADV,UAcK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;kCAbM,GAAM,CAAA,EAAA,CAAA,CAAA;;;;qCAAX,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;0CAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;IAEG,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAAC,mBAAA,CAAA;IAET,EAAA,kBAAA,GAAS,QAAI,CAAC,EAAA,OAAA,iBAAA,CAAA;IAEd,EAAA,kBAAA,GAAS,QAAI,GAAG,EAAA,OAAA,iBAAA,CAAA;IAEhB,EAAA,kBAAA,GAAS,QAAI,OAAO,EAAA,OAAA,iBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAC1B,UAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAxD,UAAmD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFtE,UAAuD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAnD,UAA8C,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAFlD,UAAiE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAA7D,UAAwD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAF5D,UAAkF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;OAAzD,UAAoD,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;gCAFhF,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAAC,mBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAH5D,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,IAAAC,mBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;uBAApD,GAAO,CAAA,CAAA,CAAA,UAAI,GAAC,CAAI,EAAA,CAAA,gBAAA,GAAO,0BAAI,GAAe,CAAA,EAAA,CAAA,GAAG,CAAC,UAAK,GAAC,CAAA,EAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BApD3D,GAAG,CAAA,CAAA,CAAA,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;IAoBJ,CAAA,IAAA,SAAA,qBAAA,GAAa,QAAK,SAAS,IAAA,kBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;IAa3B,EAAA,sBAAA,GAAa,OAAI,UAAU,EAAA,OAAA,CAAA,CAAA;IAgElB,EAAA,sBAAA,GAAa,OAAI,QAAQ,EAAA,OAAA,CAAA,CAAA;IAuFzB,EAAA,sBAAA,GAAa,OAAI,QAAQ,EAAA,OAAA,CAAA,CAAA;IA0FzB,EAAA,sBAAA,GAAa,OAAI,QAAQ,EAAA,OAAA,CAAA,CAAA;IAwFzB,EAAA,sBAAA,GAAa,OAAI,SAAS,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAlXxC,UAIO,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;OAHH,UAA4C,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;OAC5C,UAA+C,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;OAC/C,UAA6C,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;;;;;OA+BjD,UAKM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;OAJL,UAGQ,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;OAFP,UAA2D,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA;OAC3D,UAA2D,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;kEA/BlC,GAAa,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;;;;mBAElC,GAAG,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;IAoBJ,GAAA,sBAAA,GAAa,QAAK,SAAS,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA1CnB,cAAc,CAAC,MAAM,EAAE,MAAM,EAAA;IAClC,CAAA,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA,CAAA;IACzB,CAAA,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAA,CAAA;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAA,IAAM,MAAM,GAAG,MAAM,CAAA,GAAI,MAAM,CAAA,CAAA;;;;;;SAtoBxD,GAAG,CAAA;SACH,IAAI,CAAA;;IACC,CAAA,SAAA,aAAa,CAAC,KAAK,EAAA;sBACxB,GAAG,GAAG,KAAK,CAAC,GAAG,CAAA,CAAA;sBACf,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA,CAAA;;;;SAGjB,KAAK,GAAA;;OACJ,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,OAAO;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACvE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,GAAG;;;OACnE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;;SAEljjjjjjI,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjjjjjjjjI,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjjI,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjI,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjjjjjjjjI,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjjjjjjjvjjjjntrjhQ,KAAK,GAAA;;OACJ,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;;;OACjE,CAAC;OAAC,OAAO;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;OAAC,CAAC;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"}